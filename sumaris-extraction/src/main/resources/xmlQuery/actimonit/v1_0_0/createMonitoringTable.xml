<?xml version="1.0" encoding="UTF-8"?>
<!--
  #%L
  Dali :: Core
  %%
  Copyright (C) 2017 Ifremer
  %%
  This program is free software: you can redistribute it and/or modify
  it under the terms of the GNU Affero General Public License as published by
  the Free Software Foundation, either version 3 of the License, or
  (at your option) any later version.

  This program is distributed in the hope that it will be useful,
  but WITHOUT ANY WARRANTY; without even the implied warranty of
  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  GNU General Public License for more details.

  You should have received a copy of the GNU Affero General Public License
  along with this program.  If not, see <http://www.gnu.org/licenses/>.
  #L%
  -->

<queries name="createMonitoringTable">

  <query type="create" temp="false" table="&amp;monitoringTableName" option="distinct">
    <with alias="TMP_ACTIVITY_CALENDAR" dbms="hsqldb,pgsql">
      <subquery option="distinct">
	      <select alias="ID">R.ID</select>
	      <select alias="YEAR">R.YEAR</select>
	      <select alias="VESSEL_IDENTIFIER">R.VESSEL_IDENTIFIER</select>
        <from alias="R">&amp;rawMonitoringTableName</from>
      </subquery>
    </with>
    <with alias="TMP_ACTIVITY_CALENDAR" dbms="oracle" group="!adagio">
      <subquery option="distinct">
	      <select alias="ID">R.ID</select>
	      <select alias="YEAR">R.YEAR</select>
	      <select alias="VESSEL_IDENTIFIER">R.VESSEL_IDENTIFIER</select>
	      <from alias="R">&amp;rawMonitoringTableName</from>
      </subquery>
    </with>
    <with alias="TMP_ACTIVITY_CALENDAR" dbms="oracle" group="adagio">
      <subquery option="distinct">
        <select alias="ID">R.ID</select>
        <select alias="YEAR">R.YEAR</select>
	      <select alias="VESSEL_IDENTIFIER">R.VESSEL_IDENTIFIER</select>
	      <select alias="VESSEL_FK">V.CODE</select>
        <from alias="R">&amp;rawMonitoringTableName</from>
	      <from join="true">
		      INNER JOIN &amp;adagioSchema.M_VESSEL V
		      ON V.ID = R.VESSEL_IDENTIFIER
	      </from>
      </subquery>
    </with>
    <with alias="VF" dbms="oracle" group="!adagio">
      <subquery>
        <select alias="VESSEL_FK">VF.VESSEL_FK</select>
        <select alias="NAME">REPLACE(VF.NAME, '|', 'I')</select>
        <select alias="LOA">CAST(VF.LENGTH_OVER_ALL AS NUMBER(8, 2)) / 100</select>
        <from alias="VF">VESSEL_FEATURES</from>
        <from join="true">
					INNER JOIN TMP_ACTIVITY_CALENDAR
					ON TMP_ACTIVITY_CALENDAR.VESSEL_IDENTIFIER = VF.VESSEL_FK</from>
        <where>
					<![CDATA[
							NOT(
									NVL(VF.END_DATE, to_date('01-01-2100','DD-MM-YYYY')) < &startDate
									OR VF.START_DATE > &endDate
							)
					]]>
				</where>
      </subquery>
    </with>
    <with alias="VF" dbms="oracle" group="adagio">
      <subquery option="distinct">
        <select alias="AC_ID">TMP_ACTIVITY_CALENDAR.ID</select>
        <select alias="VESSEL_FK">VF.VESSEL_FK</select>
        <select alias="NAME">REPLACE(VF.NAME, '|', 'I')</select>
        <select alias="LOA">CAST(VF.LOA AS NUMBER(8, 2)) / 100</select>
        <from alias="VF">&amp;adagioSchema.VESSEL_FEATURES</from>
        <from join="true">
					INNER JOIN TMP_ACTIVITY_CALENDAR
					ON TMP_ACTIVITY_CALENDAR.VESSEL_FK = VF.VESSEL_FK
				</from>
        <where>
					<![CDATA[
						NOT(
								NVL(VF.END_DATE_TIME, to_date('01-01-2100','DD-MM-YYYY')) < &startDate
								OR VF.START_DATE_TIME > &endDate
						)
					]]>
				</where>
      </subquery>
    </with>

    <with alias="VRP" dbms="hsqldb,pgsql">
      <subquery option="distinct">
	      <select alias="ID">TMP_ACTIVITY_CALENDAR.ID</select>
        <select alias="VESSEL_FK">TMP_ACTIVITY_CALENDAR.VESSEL_IDENTIFIER</select>
        <select alias="START_DATE">VRP.START_DATE</select>
        <select alias="END_DATE">VRP.END_DATE</select>
	      <select alias="START_MONTH">
		      <![CDATA[
						CASE
							WHEN YEAR(VRP.START_DATE) < TMP_ACTIVITY_CALENDAR.YEAR THEN 1
							ELSE MONTH(VRP.START_DATE)
						END
					]]>
	      </select>
	      <select alias="END_MONTH">
		      <![CDATA[
						CASE
							WHEN YEAR(COALESCE(END_DATE, to_date('01-01-2100','DD-MM-YYYY'))) > TMP_ACTIVITY_CALENDAR.YEAR THEN 12
							ELSE MONTH(END_DATE)
						END
					]]>
	      </select>
-        <select alias="LOCATION_LABEL">L.LABEL</select>
        <from alias="VRP">VESSEL_REGISTRATION_PERIOD</from>
        <from join="true">INNER JOIN TMP_ACTIVITY_CALENDAR ON TMP_ACTIVITY_CALENDAR.VESSEL_IDENTIFIER = VRP.VESSEL_FK</from>
        <from join="true">LEFT OUTER JOIN LOCATION L ON VRP.REGISTRATION_LOCATION_FK = L.ID</from>
        <where>
					<![CDATA[
						NOT(
								COALESCE(VRP.END_DATE, to_date('01-01-2100','DD-MM-YYYY')) < &startDate
								OR VRP.START_DATE > &endDate
						)
					]]>
				</where>
      </subquery>
    </with>
    <with alias="VRP" dbms="oracle" group="!adagio">
      <subquery option="distinct">
	      <select alias="ID">TMP_ACTIVITY_CALENDAR.ID</select>
        <select alias="VESSEL_FK">TMP_ACTIVITY_CALENDAR.VESSEL_IDENTIFIER</select>
        <select alias="START_DATE">VRP.START_DATE</select>
        <select alias="END_DATE">VRP.END_DATE</select>
	      <select alias="START_MONTH">
		      <![CDATA[
						CASE
							WHEN EXTRACT(YEAR FROM VRP.START_DATE) < TMP_ACTIVITY_CALENDAR.YEAR THEN 1
							ELSE EXTRACT(MONTH FROM VRP.START_DATE)
						END
					]]>
	      </select>
	      <select alias="END_MONTH">
		      <![CDATA[
						CASE
							WHEN EXTRACT(YEAR FROM NVL(END_DATE, to_date('01-01-2100','DD-MM-YYYY'))) > TMP_ACTIVITY_CALENDAR.YEAR THEN 12
							ELSE EXTRACT(MONTH FROM END_DATE)
						END
					]]>
	      </select>
        <select alias="LOCATION_LABEL">L.LABEL</select>
        <from alias="VRP">VESSEL_REGISTRATION_PERIOD</from>
        <from join="true">INNER JOIN TMP_ACTIVITY_CALENDAR ON TMP_ACTIVITY_CALENDAR.VESSEL_IDENTIFIER = VRP.VESSEL_FK</from>
        <from join="true">LEFT OUTER JOIN LOCATION L ON VRP.REGISTRATION_LOCATION_FK = L.ID</from>
        <where>
					<![CDATA[
						NOT(
								NVL(VRP.END_DATE, to_date('01-01-2100','DD-MM-YYYY')) < &startDate
								OR VRP.START_DATE > &endDate
						)
					]]>
				</where>
      </subquery>
    </with>
    <with alias="VRP" dbms="oracle" group="adagio">
      <subquery option="distinct">
        <select alias="ID">TMP_ACTIVITY_CALENDAR.ID</select>
        <select alias="VESSEL_FK">TMP_ACTIVITY_CALENDAR.VESSEL_FK</select>
        <select alias="VESSEL_IDENTIFIER">TMP_ACTIVITY_CALENDAR.VESSEL_IDENTIFIER</select>
        <select alias="INT_REGISTRATION_CODE">VRP.INT_REGISTRATION_CODE</select>
        <select alias="REGISTRATION_CODE">VRP.REGISTRATION_CODE</select>
        <select alias="START_DATE">VRP.START_DATE_TIME</select>
        <select alias="END_DATE">VRP.END_DATE_TIME</select>
        <select alias="START_MONTH">
					<![CDATA[
						CASE
							WHEN EXTRACT(YEAR FROM VRP.START_DATE_TIME) < TMP_ACTIVITY_CALENDAR.YEAR THEN 1
							ELSE EXTRACT(MONTH FROM VRP.START_DATE_TIME)
						END
					]]>
				</select>
        <select alias="END_MONTH">
					<![CDATA[
						CASE
							WHEN EXTRACT(YEAR FROM NVL(END_DATE_TIME, to_date('01-01-2100','DD-MM-YYYY'))) > TMP_ACTIVITY_CALENDAR.YEAR THEN 12
							ELSE EXTRACT(MONTH FROM END_DATE_TIME)
						END
					]]>
				</select>
        <select alias="LOCATION_LABEL">L.LABEL</select>
        <from alias="VRP">&amp;adagioSchema.VESSEL_REGISTRATION_PERIOD</from>
        <from join="true">INNER JOIN TMP_ACTIVITY_CALENDAR ON TMP_ACTIVITY_CALENDAR.VESSEL_FK = VRP.VESSEL_FK</from>
        <from join="true">LEFT OUTER JOIN LOCATION L ON VRP.REGISTRATION_LOCATION_FK = L.ID</from>
        <where>
					<![CDATA[
						NOT(
							NVL(VRP.END_DATE_TIME, to_date('01-01-2100','DD-MM-YYYY')) < &startDate
							OR VRP.START_DATE_TIME > &endDate
						)
					]]>
				</where>
      </subquery>
    </with>
    <with alias="VRPL">
      <subquery option="distinct">
        <select>V.ID</select>
        <select>V.LOCATION_LABEL</select>
        <from alias="V">VRP</from>
        <from join="true" group="adagio">INNER JOIN TMP_ACTIVITY_CALENDAR T ON T.VESSEL_IDENTIFIER = V.VESSEL_IDENTIFIER</from>
        <from join="true" group="!adagio">INNER JOIN TMP_ACTIVITY_CALENDAR T ON T.VESSEL_IDENTIFIER = V.VESSEL_FK</from>
      </subquery>
    </with>
    <with alias="VESSEL_REGISTRATION_INTERVAL">
      <subquery>
        <select>ID</select>
        <select alias="START_MONTH">MIN(START_MONTH)</select>
        <select alias="END_MONTH">MAX(END_MONTH)</select>
        <from alias="VRP">VRP</from>
        <groupby>ID</groupby>
      </subquery>
    </with>
    <with alias="VESSEL_REGISTRATION_NB_MONTH">
      <subquery>
        <select>ID</select>
        <select alias="NB_MONTH">END_MONTH - START_MONTH + 1</select>
        <from>VESSEL_REGISTRATION_INTERVAL</from>
      </subquery>
    </with>

    <with alias="OBS" dbms="oracle">
      <subquery option="DISTINCT">
        <select>TMP_ACTIVITY_CALENDAR.ID</select>
        <select alias="OBSERVER">PERSON.LAST_NAME || ' ' || PERSON.FIRST_NAME</select>
        <from>TMP_ACTIVITY_CALENDAR</from>
        <from join="true">
					INNER JOIN ACTIVITY_CALENDAR2PERSON AC2P
					ON AC2P.ACTIVITY_CALENDAR_FK = TMP_ACTIVITY_CALENDAR.ID
				</from>
        <from join="true">
					LEFT OUTER JOIN PERSON
					ON PERSON.ID = AC2P.PERSON_FK
				</from>
        <where>AC2P.ACTIVITY_CALENDAR_FK = TMP_ACTIVITY_CALENDAR.ID</where>
      </subquery>
    </with>
    <with alias="DISTINCT_MONTH_COUNT">
      <subquery option="DISTINCT">
        <select>ID</select>
        <select>MONTH</select>
        <select>ERROR</select>
        <from>&amp;rawMonitoringTableName</from>
      </subquery>
    </with>
    <select type="hidden" alias="ID">T.ID</select>
    <select type="number" alias="YEAR">T.YEAR</select>

    <select type="text" alias="OBSERVER_NAME" dbms="hsqldb" group="agg">
			GROUP_CONCAT(DISTINCT T.OBSERVER_NAME SEPARATOR '|')
    </select>
    <select type="text" alias="OBSERVER_NAME" dbms="pgsql" group="agg">
			STRING_AGG(DISTINCT T.OBSERVER_NAME, '|')
    </select>
    <select type="text" alias="OBSERVER_NAME" dbms="oracle" group="agg">
      (SELECT LISTAGG(OBSERVER, ' | ') WITHIN GROUP (ORDER BY OBSERVER) FROM OBS WHERE OBS.ID = T.ID)
    </select>

    <select type="text" alias="VESSEL_REGISTRATION_CODE" dbms="hsqldb" group="agg">
			GROUP_CONCAT(DISTINCT T.VESSEL_REGISTRATION_CODE SEPARATOR '|')
    </select>
    <select type="text" alias="VESSEL_REGISTRATION_CODE" dbms="pgsql" group="agg">
			STRING_AGG(DISTINCT T.VESSEL_REGISTRATION_CODE, '|')
    </select>
    <select type="text" alias="VESSEL_REGISTRATION_CODE" dbms="oracle" group="agg">
      (
				SELECT LISTAGG(REGISTRATION_CODE, ' | ') WITHIN GROUP (ORDER BY REGISTRATION_CODE)
				FROM (SELECT DISTINCT ID, REGISTRATION_CODE FROM VRP) V
				WHERE V.ID = T.ID
			)
    </select>

    <select type="text" alias="VESSEL_INT_REGISTRATION_CODE" dbms="hsqldb" group="agg">
			GROUP_CONCAT(DISTINCT T.VESSEL_INT_REGISTRATION_CODE SEPARATOR '|')
    </select>
    <select type="text" alias="VESSEL_INT_REGISTRATION_CODE" dbms="pgsql" group="agg">
			STRING_AGG(DISTINCT T.VESSEL_INT_REGISTRATION_CODE, '|')
    </select>
    <select type="text" alias="VESSEL_INT_REGISTRATION_CODE" dbms="oracle" group="agg">
      (
				SELECT LISTAGG(INT_REGISTRATION_CODE, ' | ') WITHIN GROUP (ORDER BY INT_REGISTRATION_CODE)
				FROM (SELECT DISTINCT ID, INT_REGISTRATION_CODE FROM VRP) V
				WHERE V.ID = T.ID
			)
    </select>

    <select type="text" alias="VESSEL_NAME" dbms="hsqldb" group="agg">GROUP_CONCAT(DISTINCT T.VESSEL_NAME SEPARATOR
      '|')
    </select>
    <select type="text" alias="VESSEL_NAME" dbms="pgsql" group="agg">
			STRING_AGG(DISTINCT T.VESSEL_NAME, '|')
		</select>
    <select type="text" alias="VESSEL_NAME" dbms="oracle" group="agg">
      (
				SELECT LISTAGG(NAME, ' | ') WITHIN GROUP (ORDER BY NAME)
				FROM (SELECT DISTINCT AC_ID, NAME FROM VF) V
				WHERE V.AC_ID = T.ID
			)
    </select>

    <select type="text" alias="VESSEL_LENGTH" dbms="hsqldb" group="agg">
			GROUP_CONCAT(DISTINCT T.VESSEL_LENGTH SEPARATOR '|')
    </select>
    <select type="text" alias="VESSEL_LENGTH" dbms="pgsql" group="agg">
			STRING_AGG(DISTINCT T.VESSEL_LENGTH, '|')
    </select>
    <select type="text" alias="VESSEL_LENGTH" dbms="oracle" group="agg">
      (
				SELECT LISTAGG(LOA, ' | ') WITHIN GROUP (ORDER BY LOA)
				FROM (SELECT DISTINCT AC_ID, LOA FROM VF) V
				WHERE V.AC_ID = T.ID
			)
    </select>

    <select type="text" alias="REGISTRATION_LOCATION_LABEL" dbms="hsqldb" group="agg">
			GROUP_CONCAT(DISTINCT T.REGISTRATION_LOCATION_LABEL SEPARATOR '|')
    </select>
    <select type="text" alias="REGISTRATION_LOCATION_LABEL" dbms="pgsql" group="agg">
			STRING_AGG(DISTINCT T.REGISTRATION_LOCATION_LABEL, '|')
    </select>
    <select type="text" alias="REGISTRATION_LOCATION_LABEL" dbms="oracle" group="agg">
      (SELECT LISTAGG(LOCATION_LABEL, ' | ') WITHIN GROUP (ORDER BY LOCATION_LABEL) FROM VRPL WHERE VRPL.ID = T.ID)
    </select>

    <select alias="DIRECT_SURVEY_INVESTIGATION">T.DIRECT_SURVEY_INVESTIGATION</select>
    <select alias="ECONOMIC_SURVEY">T.ECONOMIC_SURVEY</select>/
    <select type="text" alias="SURVEY_QUALIFICATION">T.SURVEY_QUALIFICATION</select>
    <select type="text" alias="RECORDER_PERSON_NAME">T.RECORDER_PERSON_NAME</select>
    <select type="text" alias="RECORDER_DEPARTMENT">T.RECORDER_DEPARTMENT</select>

    <select alias="START_MONTH">VRI.START_MONTH</select>
    <select alias="END_MONTH">VRI.END_MONTH</select>
    <select alias="NB_MONTH">VRM.NB_MONTH</select>
    <select alias="EMPTY_MONTH_COUNT" group="agg">
      GREATEST(0, MIN(VRM.NB_MONTH - (SELECT COUNT(MONTH) FROM DISTINCT_MONTH_COUNT WHERE ID = T.ID)))
    </select>

    <select type="text" alias="QUALITY_STATUS">T.QUALITY_STATUS</select>
    <select type="text" alias="STATUS" group="agg" dbms="oracle">
      <![CDATA[
        TRIM(
          CASE 
            WHEN VRM.NB_MONTH = 0 THEN 'EMPTY'
            WHEN VRM.NB_MONTH <= (SELECT COUNT(MONTH) FROM DISTINCT_MONTH_COUNT WHERE ID = T.ID) THEN (
              CASE (SELECT COUNT(ERROR) FROM DISTINCT_MONTH_COUNT WHERE ID = T.ID)
                WHEN 0 THEN 'COMPLETE'
                ELSE 'INCOMPLETE'
              END
            )
            ELSE 'INCOMPLETE'
          END
        )
      ]]>
    </select>
    <select type="text" alias="STATUS" group="agg" dbms="hsqldb,pgsql">
      <![CDATA[
        MIN(
          TRIM(
            CASE 
              WHEN VRM.NB_MONTH = 0 THEN 'EMPTY'
              WHEN VRM.NB_MONTH <= (SELECT COUNT(MONTH) FROM DISTINCT_MONTH_COUNT WHERE ID = T.ID) THEN (
                CASE (SELECT COUNT(ERROR) FROM DISTINCT_MONTH_COUNT WHERE ID = T.ID)
                  WHEN 0 THEN 'COMPLETE'
                  ELSE 'INCOMPLETE'
                END
              )
              ELSE 'INCOMPLETE'
            END
          )
        )
      ]]>
    </select>

    <from alias="AC">TMP_ACTIVITY_CALENDAR</from>
    <from join="true">
			INNER JOIN &amp;rawMonitoringTableName T ON T.ID = AC.ID
		</from>
    <from join="true">
			INNER JOIN VESSEL_REGISTRATION_INTERVAL VRI ON VRI.ID = AC.ID
		</from>
    <from join="true">
			INNER JOIN VESSEL_REGISTRATION_NB_MONTH VRM ON VRM.ID = AC.ID
		</from>
    <from join="true" group="adagio">
			INNER JOIN VRP V ON V.VESSEL_IDENTIFIER = T.VESSEL_IDENTIFIER
		</from>
    <from join="true" group="!adagio">
			INNER JOIN VRP V ON V.VESSEL_FK = T.VESSEL_IDENTIFIER
		</from>

    <groupby>&amp;groupByColumns</groupby>
  </query>

</queries>
