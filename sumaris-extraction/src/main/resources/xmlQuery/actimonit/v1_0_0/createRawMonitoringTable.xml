<?xml version="1.0" encoding="UTF-8"?>
<!--
  #%L
  Dali :: Core
  %%
  Copyright (C) 2017 Ifremer
  %%
  This program is free software: you can redistribute it and/or modify
  it under the terms of the GNU Affero General Public License as published by
  the Free Software Foundation, either version 3 of the License, or
  (at your option) any later version.

  This program is distributed in the hope that it will be useful,
  but WITHOUT ANY WARRANTY; without even the implied warranty of
  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  GNU General Public License for more details.

  You should have received a copy of the GNU Affero General Public License
  along with this program.  If not, see <http://www.gnu.org/licenses/>.
  #L%
  -->
<queries name="createRawMonitoringTable">
    <query type="create" temp="false" table="&amp;monitoringTableName">
        <select alias="ACTIVITY_CALENDAR_ID" type="number">ACTIVITY_CALENDAR.ID </select>
        <select alias="ACTIVITY_CALENDAR_YEAR" type="text">ACTIVITY_CALENDAR.YEAR</select>
        <select alias="VUF_IS_ACTIVE" type="text">VESSEL_USE_FEATURES.IS_ACTIVE</select>
        <select alias="VUF_MONTH" type="text">MONTH(VESSEL_USE_FEATURES.START_DATE)</select>
        <select alias="GUF_COUNT" type="text">COUNT(DISTINCT GEAR_USE_FEATURES.ID)</select>

        <select alias="VESSEL_FEATURES_NAME" dbms="hsqldb">GROUP_CONCAT(DISTINCT VESSEL_FEATURES.NAME ORDER BY VESSEL_FEATURES.START_DATE SEPARATOR ', ')</select>
        <select alias="VESSEL_FEATURES_NAME" dbms="pgsql">STRING_AGG(DISTINCT VESSEL_FEATURES.NAME, ', ' ORDER BY VESSEL_FEATURES.START_DATE)</select>
        <select alias="VESSEL_FEATURES_NAME" dbms="oracle">LISTAGG(DISTINCT VESSEL_FEATURES.NAME, ', ') WITHIN GROUP (ORDER BY VESSEL_FEATURES.START_DATE)</select>

        <select alias="VESSEL_FEATURES_LENGTH" dbms="hsqldb">GROUP_CONCAT(DISTINCT (VESSEL_FEATURES.LENGTH_OVER_ALL * 0.01) ORDER BY VESSEL_FEATURES.START_DATE SEPARATOR ', ')</select>
        <select alias="VESSEL_FEATURES_LENGTH" dbms="pgsql">STRING_AGG(DISTINCT (VESSEL_FEATURES.LENGTH_OVER_ALL * 0.01), ', ' ORDER BY VESSEL_FEATURES.START_DATE)</select>
        <select alias="VESSEL_FEATURES_LENGTH" dbms="oracle">LISTAGG(DISTINCT (VESSEL_FEATURES.LENGTH_OVER_ALL * 0.01), ', ') WITHIN GROUP (ORDER BY VESSEL_FEATURES.START_DATE)</select>

        <select alias="REGISTRATION_LOCATION_LABEL" dbms="hsqldb">GROUP_CONCAT(DISTINCT REGISTRATION_LOCATION.LABEL ORDER BY VESSEL_REGISTRATION_PERIOD.START_DATE SEPARATOR ', ')</select>
        <select alias="REGISTRATION_LOCATION_LABEL" dbms="pgsql">STRING_AGG(DISTINCT REGISTRATION_LOCATION.LABEL, ', ' ORDER BY VESSEL_REGISTRATION_PERIOD.START_DATE)</select>
        <select alias="REGISTRATION_LOCATION_LABEL" dbms="oracle">LISTAGG(DISTINCT REGISTRATION_LOCATION.LABEL, ', ') WITHIN GROUP (ORDER BY VESSEL_REGISTRATION_PERIOD.START_DATE)</select>

        <select alias="VESSEL_REGISTRATION_PERIOD_REGISTRATION_CODE" dbms="hsqldb">GROUP_CONCAT(DISTINCT VESSEL_REGISTRATION_PERIOD.REGISTRATION_CODE ORDER BY VESSEL_REGISTRATION_PERIOD.START_DATE SEPARATOR ', ')</select>
        <select alias="VESSEL_REGISTRATION_PERIOD_REGISTRATION_CODE" dbms="pgsql">STRING_AGG(DISTINCT VESSEL_REGISTRATION_PERIOD.REGISTRATION_CODE, ', ' ORDER BY VESSEL_REGISTRATION_PERIOD.START_DATE)</select>
        <select alias="VESSEL_REGISTRATION_PERIOD_REGISTRATION_CODE" dbms="oracle">LISTAGG(DISTINCT VESSEL_REGISTRATION_PERIOD.REGISTRATION_CODE, ', ') WITHIN GROUP (ORDER BY VESSEL_REGISTRATION_PERIOD.START_DATE)</select>

        <select alias="SURVEY_QUALIFICATION">QUALITATIVE_VALUE.NAME</select>
        <select alias="RECORDER_PERSON">(SELECT CONCAT(LAST_NAME,' ', FIRST_NAME) FROM PERSON INNER JOIN ACTIVITY_CALENDAR A on PERSON.ID = A.RECORDER_PERSON_FK WHERE A.ID = ACTIVITY_CALENDAR.ID)</select>

        <from>ACTIVITY_CALENDAR</from>

        <from join="true">INNER JOIN PROGRAM on PROGRAM.ID = ACTIVITY_CALENDAR.PROGRAM_FK</from>
        <from join="true">INNER JOIN VESSEL on ACTIVITY_CALENDAR.VESSEL_FK = VESSEL.ID</from>
        <from join="true"><![CDATA[
            LEFT OUTER JOIN VESSEL_REGISTRATION_PERIOD ON VESSEL.ID = VESSEL_REGISTRATION_PERIOD.VESSEL_FK
                AND NOT(
                (VESSEL_REGISTRATION_PERIOD.END_DATE  <= &endDateVesselRegistration OR VESSEL_REGISTRATION_PERIOD.END_DATE IS NULL)
                AND (VESSEL_REGISTRATION_PERIOD.START_DATE > &endDateVesselRegistration )
            )]]>
        </from>
        <from join="true">LEFT OUTER JOIN LOCATION REGISTRATION_LOCATION ON VESSEL_REGISTRATION_PERIOD.REGISTRATION_LOCATION_FK = REGISTRATION_LOCATION.ID</from>
        <from join="true"><![CDATA[
            LEFT OUTER JOIN VESSEL_FEATURES ON VESSEL.ID = VESSEL_FEATURES.VESSEL_FK
            AND NOT( (VESSEL_FEATURES.END_DATE < &endDateVesselFeature OR VESSEL_FEATURES.END_DATE IS NULL)
            AND (VESSEL_FEATURES.START_DATE > &endDateVesselFeature)
            )]]>
        </from>
        <from join="true">
            LEFT OUTER JOIN	VESSEL_USE_FEATURES ON VESSEL_USE_FEATURES.ACTIVITY_CALENDAR_FK = ACTIVITY_CALENDAR.ID
        </from>
        <from join="true">
            LEFT OUTER JOIN GEAR_USE_FEATURES ON GEAR_USE_FEATURES.ACTIVITY_CALENDAR_FK = ACTIVITY_CALENDAR.ID AND GEAR_USE_FEATURES.START_DATE = VESSEL_USE_FEATURES.START_DATE AND GEAR_USE_FEATURES.END_DATE = VESSEL_USE_FEATURES.END_DATE
        </from>
        <from join="true">
            LEFT OUTER JOIN SURVEY_MEASUREMENT ON ACTIVITY_CALENDAR.ID = SURVEY_MEASUREMENT.ACTIVITY_CALENDAR_FK
            AND ( PMFM_FK = (SELECT ID FROM PMFM WHERE LABEL = 'SURVEY_QUALIFICATION'))
        </from>
        <from join="true">
            LEFT OUTER JOIN QUALITATIVE_VALUE ON SURVEY_MEASUREMENT.QUALITATIVE_VALUE_FK = QUALITATIVE_VALUE.ID
        </from>
        <where>1=1</where>
        <where operator="AND">
            ACTIVITY_CALENDAR.YEAR = &amp;activityCalendarYear
        </where>
        <groupby>
            ACTIVITY_CALENDAR.ID, ACTIVITY_CALENDAR.YEAR, VUF_MONTH, VUF_IS_ACTIVE, QUALITATIVE_VALUE.NAME
        </groupby>
        <orderby>
            ACTIVITY_CALENDAR.ID, ACTIVITY_CALENDAR.YEAR, VUF_MONTH
        </orderby>
    </query>
</queries>
