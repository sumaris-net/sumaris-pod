<?xml version="1.0" encoding="UTF-8"?>
<!--
  #%L
  Dali :: Core
  %%
  Copyright (C) 2017 Ifremer
  %%
  This program is free software: you can redistribute it and/or modify
  it under the terms of the GNU Affero General Public License as published by
  the Free Software Foundation, either version 3 of the License, or
  (at your option) any later version.
  
  This program is distributed in the hope that it will be useful,
  but WITHOUT ANY WARRANTY; without even the implied warranty of
  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  GNU General Public License for more details.
  
  You should have received a copy of the GNU Affero General Public License
  along with this program.  If not, see <http://www.gnu.org/licenses/>.
  #L%
  -->

<query type="select">

  <select alias="SUBSTRATE_TYPE" type="text" group="agg"><![CDATA[
    MAX(CASE VUM.PMFM_FK WHEN &substrateTypePmfmId THEN QV.LABEL ELSE NULL END)
  ]]></select>

  <select alias="BOTTOM_TEMP_C" type="number" group="agg"><![CDATA[
    MAX(CASE VUM.PMFM_FK WHEN &bottomTempPmfmId THEN VUM.NUMERICAL_VALUE ELSE NULL END)
  ]]></select>

  <select alias="SEA_STATE" type="text" group="agg"><![CDATA[
    MAX(CASE VUM.PMFM_FK WHEN &seaStatePmfmId THEN QV.LABEL ELSE NULL END)
  ]]></select>

  <select alias="SURVIVAL_SAMPLING_TYPE" type="text" group="agg"><![CDATA[
    MAX(CASE VUM.PMFM_FK WHEN &survivalSamplingTypePmfmId THEN QV.LABEL ELSE NULL END)
  ]]></select>

  <!-- catch batch-->
  <select alias="ON_DECK_DATE_TIME" type="date" dbms="hsqldb" group="agg"><![CDATA[
    MAX(
      CASE WHEN SM.PMFM_FK=&onDeckDateTimePmfmId AND LENGTH(SM.ALPHANUMERICAL_VALUE)=24
        THEN TIMESTAMP(REPLACE(REPLACE(SM.ALPHANUMERICAL_VALUE, 'T', ' '), 'Z', ''))
        ELSE NULL
      END
    )
  ]]></select>
  <select alias="ON_DECK_DATE_TIME" type="date" dbms="oracle,pgsql" group="agg"><![CDATA[
    MAX(
      CASE WHEN SM.PMFM_FK=&onDeckDateTimePmfmId AND LENGTH(SM.ALPHANUMERICAL_VALUE)=24
        THEN TO_TIMESTAMP(REPLACE(REPLACE(SM.ALPHANUMERICAL_VALUE, 'T', ' '), 'Z', ''), 'YYYY-MM-DD HH24:MI:SS')
        ELSE NULL
      END
    )
  ]]></select>
  <select alias="SORTING_START_DATE_TIME" type="date" dbms="hsqldb" group="agg"><![CDATA[
    MAX(
      CASE WHEN SM.PMFM_FK=&sortingDateTimePmfmId AND LENGTH(SM.ALPHANUMERICAL_VALUE)=24
        THEN TIMESTAMP(REPLACE(REPLACE(SM.ALPHANUMERICAL_VALUE, 'T', ' '), 'Z', ''))
        ELSE NULL
      END
    )
    ]]></select>
  <select alias="SORTING_START_DATE_TIME" type="date" dbms="oracle,pgsql" group="agg"><![CDATA[
    MAX(
      CASE WHEN SM.PMFM_FK=&sortingDateTimePmfmId AND LENGTH(SM.ALPHANUMERICAL_VALUE)=24
        THEN TO_TIMESTAMP(REPLACE(REPLACE(SM.ALPHANUMERICAL_VALUE, 'T', ' '), 'Z', ''), 'YYYY-MM-DD HH24:MI:SS')
        ELSE NULL
      END
    )
  ]]></select>
  <select alias="SORTING_END_DATE_TIME" type="date" dbms="hsqldb" group="agg"><![CDATA[
    MAX(
      CASE WHEN SM.PMFM_FK=&sortingEndDateTimePmfmId AND LENGTH(SM.ALPHANUMERICAL_VALUE)=24
        THEN TIMESTAMP(REPLACE(REPLACE(SM.ALPHANUMERICAL_VALUE, 'T', ' '), 'Z', ''))
        ELSE NULL
      END
    )
  ]]></select>
  <select alias="SORTING_END_DATE_TIME" type="date" dbms="oracle,pgsql" group="agg"><![CDATA[
    MAX(
      CASE WHEN SM.PMFM_FK=&sortingEndDateTimePmfmId AND LENGTH(SM.ALPHANUMERICAL_VALUE)=24
        THEN TO_TIMESTAMP(REPLACE(REPLACE(SM.ALPHANUMERICAL_VALUE, 'T', ' '), 'Z', ''), 'YYYY-MM-DD HH24:MI:SS')
        ELSE NULL
      END
    )
  ]]></select>

  <select alias="LANDING_WEIGHT" type="number" group="agg"><![CDATA[
    MAX(CASE QM.PMFM_FK WHEN &landingWeightPmfmId THEN QM.NUMERICAL_VALUE ELSE NULL END)
  ]]></select>
  <select alias="SAND_STONES_WEIGHT_RANGE" type="text" group="agg"><![CDATA[
    MAX(CASE SM.PMFM_FK WHEN &sandStonesWeightRangePmfmId THEN SMQV.NAME ELSE NULL END)
  ]]></select>
  <select alias="BENTHOS_WEIGHT_RANGE" type="text" group="agg"><![CDATA[
    MAX(CASE SM.PMFM_FK WHEN &benthosWeightRangePmfmId THEN SMQV.NAME ELSE NULL END)
  ]]></select>

  <from join="true">LEFT OUTER JOIN BATCH B on B.OPERATION_FK=O.ID AND B.PARENT_BATCH_FK IS NULL</from>
  <from join="true">LEFT OUTER JOIN QUANTIFICATION_MEASUREMENT_B QM on QM.BATCH_FK=B.ID</from>
  <from join="true">LEFT OUTER JOIN SORTING_MEASUREMENT_B SM on SM.BATCH_FK=B.ID</from>
  <from join="true">LEFT OUTER JOIN QUALITATIVE_VALUE SMQV on SMQV.ID=SM.QUALITATIVE_VALUE_FK</from>

</query>
