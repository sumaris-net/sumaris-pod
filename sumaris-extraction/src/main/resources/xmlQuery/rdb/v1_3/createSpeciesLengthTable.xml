<?xml version="1.0" encoding="UTF-8"?>
<!--
  #%L
  Dali :: Core
  %%
  Copyright (C) 2017 Ifremer
  %%
  This program is free software: you can redistribute it and/or modify
  it under the terms of the GNU Affero General Public License as published by
  the Free Software Foundation, either version 3 of the License, or
  (at your option) any later version.
  
  This program is distributed in the hope that it will be useful,
  but WITHOUT ANY WARRANTY; without even the implied warranty of
  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  GNU General Public License for more details.
  
  You should have received a copy of the GNU Affero General Public License
  along with this program.  If not, see <http://www.gnu.org/licenses/>.
  #L%
  -->

<queries name="extractionCreateSpeciesLengthTable">

  <query type="create" temp="false" table="&amp;speciesLengthTableName">

    <with alias="BATCH_LENGTH">
      <subquery option="distinct">
        <select alias="SAMPLE_ID" type="number">SL.SAMPLE_ID</select>
        <select alias="ID" type="number">B.ID</select>
        <select alias="SEX" type="text">(SELECT QV.LABEL FROM SORTING_MEASUREMENT_B SM_SEX INNER JOIN QUALITATIVE_VALUE QV ON QV.ID=SM_SEX.QUALITATIVE_VALUE_FK WHERE SM_SEX.BATCH_FK = B.ID and SM_SEX.PMFM_FK=&amp;sexPmfmId)</select>
        <select alias="LENGTH_CLASS" type="number">CAST(CASE PMFM_LENGTH.UNIT_FK WHEN &amp;centimeterUnitId THEN SM_LENGTH.NUMERICAL_VALUE*10 WHEN &amp;millimeterUnitId THEN SM_LENGTH.NUMERICAL_VALUE ELSE null END AS INTEGER)</select>
        <select alias="INDIVIDUAL_COUNT" type="number">COALESCE(B.INDIVIDUAL_COUNT,1)</select>
        <select alias="COMMENTS" type="text">B.COMMENTS</select>
        <select alias="PARAMETER_LABEL" type="text">P_LENGTH.LABEL</select>
        <select alias="PARAMETER_NAME" type="text">P_LENGTH.NAME</select>
        <select alias="REFERENCE_TAXON_ID" group="taxon" type="number">B.REFERENCE_TAXON_FK</select> <!-- used by PMFM TRIP -->

        <from alias="SL">&amp;rawSpeciesListTableName</from>
        <from join="true">INNER JOIN BATCH B ON B.PARENT_BATCH_FK=SL.SAMPLE_ID AND B.LABEL LIKE UPPER('SORTING_BATCH_INDIVIDUAL#%')</from>
        <from join="true">INNER JOIN SORTING_MEASUREMENT_B SM_LENGTH ON SM_LENGTH.BATCH_FK = B.ID AND SM_LENGTH.PMFM_FK IN (&amp;lengthPmfmIds)</from>
        <from join="true">INNER JOIN PMFM PMFM_LENGTH ON PMFM_LENGTH.ID = SM_LENGTH.PMFM_FK</from>
        <from join="true">INNER JOIN PARAMETER P_LENGTH ON P_LENGTH.ID = PMFM_LENGTH.PARAMETER_FK</from>
      </subquery>
    </with>

    <!-- PK -->
    <select alias="RECORD_TYPE" type="text" group="recordType">UPPER('HL')</select>
    <select alias="SAMPLING_TYPE" type="text">SL.SAMPLING_TYPE</select>
    <select alias="LANDING_COUNTRY" type="text">SL.LANDING_COUNTRY</select>
    <select alias="VESSEL_FLAG_COUNTRY" type="text">SL.VESSEL_FLAG_COUNTRY</select>
    <select alias="YEAR" type="number">SL.YEAR</select>
    <select alias="PROJECT" type="text">SL.PROJECT</select>
    <select alias="TRIP_CODE" type="number">SL.TRIP_CODE</select>
    <select alias="STATION_NUMBER" type="number">SL.STATION_NUMBER</select>
    <select alias="SPECIES" type="text">SL.SPECIES</select>
    <injection name="afterSpeciesInjection" type="select" group="injectionPoint"/>
    <select alias="CATCH_CATEGORY" type="text">SL.CATCH_CATEGORY</select>
    <select alias="LANDING_CATEGORY" type="text">
      (CASE SL.CATCH_CATEGORY WHEN 'LAN' THEN SL.LANDING_CATEGORY ELSE NULL END)
    </select>
    <select alias="COMMERCIAL_SIZE_CATEGORY_SCALE" type="text">SL.COMMERCIAL_SIZE_CATEGORY_SCALE</select>
    <select alias="COMMERCIAL_SIZE_CATEGORY" type="text">
      (CASE SL.COMMERCIAL_SIZE_CATEGORY WHEN 'NA' THEN NULL ELSE SL.COMMERCIAL_SIZE_CATEGORY END)
    </select>
    <select alias="SUBSAMPLING_CATEGORY" type="text">SL.SUBSAMPLING_CATEGORY</select>
    <select alias="SEX" group="sex" type="text">SL.SEX</select>

    <!-- other fields -->
    <select alias="INDIVIDUAL_SEX" group="sex" type="text">B.SEX</select>

    <injection name="afterSexInjection" type="select" group="injectionPoint"/>

    <injection name="pmfmsInjection" type="select" group="injectionPoint"/>

    <select alias="LENGTH_CLASS" group="lengthClass" type="number">B.LENGTH_CLASS</select>
    <select alias="NUMBER_AT_LENGTH"  group="numberAtLength,agg" type="number">SUM(B.INDIVIDUAL_COUNT)</select>

    <!-- need to link other tables -->
    <select alias="STATION_ID" type="hidden">SL.STATION_ID</select>
    <select alias="SAMPLE_ID" type="hidden">SL.SAMPLE_ID</select>
    <select alias="MEASURE_IDS" dbms="hsqldb,pgsql" type="hidden" group="agg">ARRAY_AGG(B.ID)</select>
    <select alias="MEASURE_IDS" dbms="oracle" type="hidden" group="agg,oracle11">LISTAGG(B.ID, ',')</select>
    <select alias="MEASURE_IDS" dbms="oracle" type="hidden" group="agg,oracle12">LISTAGG(B.ID, ',') WITHIN GROUP (ORDER BY B.ID)</select>

    <from alias="SL">&amp;rawSpeciesListTableName</from>
    <from join="true">INNER JOIN BATCH_LENGTH B ON B.SAMPLE_ID=SL.SAMPLE_ID</from>

    <where>1=1</where>

    <where operator="AND" group="taxon">
      (SL.REFERENCE_TAXON_ID IS NULL OR B.REFERENCE_TAXON_ID=SL.REFERENCE_TAXON_ID)
    </where>

    <groupby>&amp;groupByColumns</groupby>
  </query>

</queries>
