<?xml version="1.0" encoding="UTF-8"?>
<!--
  #%L
  Dali :: Core
  %%
  Copyright (C) 2017 Ifremer
  %%
  This program is free software: you can redistribute it and/or modify
  it under the terms of the GNU Affero General Public License as published by
  the Free Software Foundation, either version 3 of the License, or
  (at your option) any later version.
  
  This program is distributed in the hope that it will be useful,
  but WITHOUT ANY WARRANTY; without even the implied warranty of
  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  GNU General Public License for more details.
  
  You should have received a copy of the GNU Affero General Public License
  along with this program.  If not, see <http://www.gnu.org/licenses/>.
  #L%
  -->

<queries name="extractionCreateTripTable">

  <query type="create" temp="false" table="&amp;tripTableName" option="DISTINCT">

    <!-- PK -->
    <select alias="RECORD_TYPE" type="text" group="recordType">UPPER('TR')</select>
    <select alias="SAMPLING_TYPE" type="text">UPPER('S')</select>
    <select alias="LANDING_COUNTRY" type="text">PL.LABEL</select>
    <select alias="VESSEL_FLAG_COUNTRY" type="text">VL.LABEL</select>
    <select alias="YEAR" type="number">CAST (EXTRACT(YEAR FROM T.RETURN_DATE_TIME) AS INT)</select>
    <select alias="PROJECT" type="text">P.LABEL</select>
    <select alias="TRIP_CODE" type="number">T.ID</select>

    <!-- other fields -->
    <select alias="VESSEL_LENGTH" type="number">VF.LENGTH_OVER_ALL / 100</select>
    <select alias="VESSEL_POWER" type="number">VF.ADMINISTRATIVE_POWER</select>
    <select alias="VESSEL_SIZE" type="number">CAST(FLOOR(COALESCE(VF.GROSS_TONNAGE_GT, VF.GROSS_TONNAGE_GRT) / 100) AS INT)</select>
    <select alias="VESSEL_TYPE" type="number">4</select> <!-- Other boat -->
    <select alias="HARBOUR" type="text">L.LABEL</select>
    <select alias="NUMBER_OF_SETS" type="number">
      COALESCE(
        (SELECT CAST(ROUND(VUM.NUMERICAL_VALUE) AS INTEGER) FROM VESSEL_USE_MEASUREMENT VUM WHERE VUM.TRIP_FK=T.ID and VUM.PMFM_FK=&amp;nbOperationPmfmId),
        (SELECT COUNT(O.ID) FROM OPERATION O WHERE O.TRIP_FK=T.ID)
      )
    </select>

    <select alias="DAYS_AT_SEA" dbms="hsqldb" type="number">CAST(EXTRACT(DAY FROM(T.RETURN_DATE_TIME - T.DEPARTURE_DATE_TIME)) AS INT)</select>
    <select alias="DAYS_AT_SEA" dbms="oracle" type="number">FLOOR(T.RETURN_DATE_TIME - T.DEPARTURE_DATE_TIME)</select>
    <select alias="DAYS_AT_SEA" dbms="pgsql" type="number">F_DATEDIFF('day', T.DEPARTURE_DATE_TIME, T.RETURN_DATE_TIME)</select>

    <select alias="VESSEL_IDENTIFIER" type="number">T.VESSEL_FK</select> <!-- TODO Ã  anonymiser (hash ?)-->
    <injection name="afterVesselInjection" type="select" group="injectionPoint"/>

    <select alias="SAMPLING_COUNTRY" type="text">COALESCE(DL.LABEL, PL.LABEL)</select>
    <select alias="SAMPLING_METHOD" type="text">(CASE UPPER('&amp;samplingMethod') WHEN 'SELFSAMPLING' THEN 'SelfSampling' ELSE 'Observer' END)</select>

    <!-- need by HH table, to exclude operation group -->
    <select alias="DEPARTURE_DATE_TIME" type="hidden" group="departureDateTime">T.DEPARTURE_DATE_TIME</select>
    <select alias="RETURN_DATE_TIME" type="hidden" group="returnDateTime">T.RETURN_DATE_TIME</select>

    <from alias="T">TRIP</from>

    <from join="true">INNER JOIN PROGRAM P ON P.ID = T.PROGRAM_FK</from>
    <!-- trip return harbour -->
    <from join="true">INNER JOIN LOCATION L ON L.ID = T.RETURN_LOCATION_FK</from>
    <!-- trip return country location -->
    <from join="true">INNER JOIN LOCATION_HIERARCHY LH on LH.CHILD_LOCATION_FK = T.RETURN_LOCATION_FK</from>
    <from join="true">INNER JOIN LOCATION PL ON PL.ID = LH.PARENT_LOCATION_FK AND PL.LOCATION_LEVEL_FK = &amp;countryLocationLevelId</from>

    <!-- vessel registration -->
    <from join="true">INNER JOIN VESSEL_REGISTRATION_PERIOD VRP ON VRP.VESSEL_FK = T.VESSEL_FK
      AND VRP.START_DATE &lt;= T.DEPARTURE_DATE_TIME
      AND COALESCE(VRP.END_DATE, to_date('01-01-2100','DD-MM-YYYY')) &gt;= T.DEPARTURE_DATE_TIME
    </from>

    <!-- vessel country location -->
    <from join="true">LEFT OUTER JOIN LOCATION_HIERARCHY VLH on VLH.CHILD_LOCATION_FK = VRP.REGISTRATION_LOCATION_FK</from>
    <from join="true">LEFT OUTER JOIN LOCATION VL ON VL.ID = VLH.PARENT_LOCATION_FK AND VL.LOCATION_LEVEL_FK = &amp;countryLocationLevelId</from>

    <!-- vessel features -->
    <from join="true">LEFT OUTER JOIN VESSEL_FEATURES VF ON VF.VESSEL_FK = T.VESSEL_FK
      AND VF.START_DATE &lt;= T.DEPARTURE_DATE_TIME
      AND COALESCE(VF.END_DATE, to_date('01-01-2100','DD-MM-YYYY')) &gt;= T.DEPARTURE_DATE_TIME
    </from>

    <!-- recorder department -->
    <from join="true">INNER JOIN DEPARTMENT D on D.ID = T.RECORDER_DEPARTMENT_FK</from>
    <from join="true">LEFT OUTER JOIN LOCATION_HIERARCHY DLH on DLH.CHILD_LOCATION_FK = D.LOCATION_FK</from>
    <from join="true">LEFT OUTER JOIN LOCATION DL ON DL.ID = DLH.PARENT_LOCATION_FK AND DL.LOCATION_LEVEL_FK = &amp;countryLocationLevelId</from>

    <where>1=1</where>

    <where operator="AND" group="startDateFilter"><![CDATA[T.RETURN_DATE_TIME >= &startDate]]></where>
    <where operator="AND" group="endDateFilter"><![CDATA[T.DEPARTURE_DATE_TIME <= &endDate]]></where>

    <where operator="AND" group="programFilter">
      <in field="P.LABEL"><![CDATA[&progLabels]]></in>
    </where>
    <where operator="AND" group="locationFilter">
      <in field="T.RETURN_LOCATION_FK"><![CDATA[&locationIds]]></in>
    </where>
    <where operator="AND" group="departmentFilter">
      <in field="T.RECORDER_DEPARTMENT_FK">&amp;recDepIds</in>
    </where>
    <where operator="AND" group="vesselFilter">
      <in field="T.VESSEL_FK">&amp;vesselIds</in>
    </where>
    <where operator="AND" group="tripFilter">
      <in field="T.ID">&amp;tripIds</in>
    </where>

    <!-- Filter on controlled (finished) trips -->
    <where operator="AND" group="controlledFilter">T.CONTROL_DATE IS NOT NULL</where>

    <orderby direction="ASC">T.ID</orderby>

  </query>

</queries>
