<?xml version="1.0" encoding="UTF-8"?>
<!--
  #%L
  Dali :: Core
  %%
  Copyright (C) 2017 Ifremer
  %%
  This program is free software: you can redistribute it and/or modify
  it under the terms of the GNU Affero General Public License as published by
  the Free Software Foundation, either version 3 of the License, or
  (at your option) any later version.
  
  This program is distributed in the hope that it will be useful,
  but WITHOUT ANY WARRANTY; without even the implied warranty of
  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  GNU General Public License for more details.
  
  You should have received a copy of the GNU Affero General Public License
  along with this program.  If not, see <http://www.gnu.org/licenses/>.
  #L%
  -->

<queries name="extractionCreateRawSpeciesListTable">

  <query type="create" temp="false" table="&amp;rawSpeciesListTableName">

    <!-- PK (inherited) -->
    <select alias="SAMPLING_TYPE" type="text">S.SAMPLING_TYPE</select>
    <select alias="LANDING_COUNTRY" type="text">S.LANDING_COUNTRY</select>
    <select alias="VESSEL_FLAG_COUNTRY" type="text">S.VESSEL_FLAG_COUNTRY</select>
    <select alias="YEAR" type="number">S.YEAR</select>
    <select alias="PROJECT" type="text">S.PROJECT</select>
    <select alias="TRIP_CODE" type="number">S.TRIP_CODE</select>
    <select alias="STATION_NUMBER" type="number">S.STATION_NUMBER</select>

    <!-- DEBUG -->
    <!--    <select alias="SPECIE_ID" type="number">SPECIE_B.ID</select>-->
<!--        <select alias="SAMPLING_B_ID" type="number">SAMPLING_B.ID</select>-->
    <!--    <select alias="SAMPLING_RATIO" type="text">SPECIE_B.SAMPLING_RATIO</select>-->

    <!-- PK (new fields) -->
    <select alias="SPECIES" type="text">COALESCE(TN.COMMENTS, TN.NAME, TG.COMMENTS, TG.NAME)</select>
    <injection name="afterSpeciesInjection" type="select" group="injectionPoint"/>
    <select alias="CATCH_CATEGORY" type="text" group="agg">
      MAX(
        CASE
          WHEN SM.PMFM_FK = &amp;catchCategoryPmfmId THEN QV.LABEL
          WHEN SPECIE_B.IS_DISCARD=true THEN 'DIS'
          WHEN SPECIE_B.IS_LANDING=true THEN 'LAN'
          ELSE NULL
        END
      )
    </select>

    <select alias="LANDING_CATEGORY" type="text" group="agg">
      MAX(
        CASE
          WHEN SM.PMFM_FK = &amp;landingCategoryPmfmId THEN QV.LABEL
          WHEN SPECIE_B.IS_LANDING=true THEN '&amp;defaultLandingCategory'
          ELSE NULL
        END
      )
    </select>
    <select alias="COMMERCIAL_SIZE_CATEGORY_SCALE" type="text" group="agg">
      MAX(
        CASE
          WHEN SPECIE_B.IS_LANDING=true AND TG.LABEL = 'NEP' THEN 'Nephrops'
          WHEN SPECIE_B.IS_LANDING=true THEN '&amp;defaultCommercialSizeCategoryScale'
          ELSE NULL
        END
      )
    </select>
    <select alias="COMMERCIAL_SIZE_CATEGORY" type="text" group="agg">
      MAX(CASE WHEN SM.PMFM_FK IN (&amp;sizeCategoryPmfmIds) THEN QV.LABEL ELSE NULL END)
    </select>
    <select alias="SUBSAMPLING_CATEGORY" type="text" group="agg">
      MAX(CASE SM.PMFM_FK WHEN &amp;subsamplingCategoryPmfmId THEN QV.LABEL ELSE NULL END)
    </select>
    <select alias="SEX" type="text" dbms="hsqldb,pgsql">null</select><!-- always define in the HL table -->
    <select alias="SEX" type="text" dbms="oracle" group="agg">CAST(NULL AS VARCHAR(1))</select><!-- always define in the HL table -->

    <!-- pmfms -->
    <injection name="pmfmsInjection" type="select" group="injectionPoint"/>

    <!-- other fields -->
    <select alias="WEIGHT" type="number" group="weight,agg">MAX(SPECIE_B.ELEVATE_WEIGHT)</select>
    <select alias="SUBSAMPLE_WEIGHT" type="number" group="agg"><![CDATA[
     MAX(CASE
        WHEN SAMPLING_B.SAMPLING_RATIO IS NULL THEN SPECIE_B.ELEVATE_WEIGHT
        WHEN SAMPLING_B.SAMPLING_RATIO > 0 THEN SPECIE_B.ELEVATE_WEIGHT * SAMPLING_B.SAMPLING_RATIO
        ELSE NULL
      END)
    ]]></select>
    <injection name="afterWeightInjection" type="select" group="injectionPoint"/>

    <select alias="LENGTH_CODE" type="text">UNIT.LABEL</select>

    <!-- Permet la répartition par taxons/length code, sous l'espèce commerciale - calculé à partir des RTP (cf Baudroie dans ADAP) -->
    <!-- /!\ 1. La division par 'count(SPECIE_B.ID)' est nécessaire à cause des jointures possibles dans les injections de PMFM -->
    <!-- /!\ 2. le 'CAST( as DECIMAL(8,7))' est nécessaire, sinon HSQLDB et Oracle renverrons toujours 0 ou 1 - cf issue #483 -->
    <select alias="SUBSAMPLING_RATIO" type="number" group="agg"><![CDATA[
      CASE
        WHEN SAMPLING_B.ELEVATE_RTP_WEIGHT > 0 THEN
          TRUNC(CAST(SUM(LENGTH_B.ELEVATE_RTP_WEIGHT) / COUNT(distinct SM.ID) / SAMPLING_B.ELEVATE_RTP_WEIGHT + 0.0000005 as DECIMAL(8,7)), 6)
        ELSE 1
      END
    ]]></select>

    <!-- need to link other tables -->
    <select alias="STATION_ID" type="number">S.STATION_ID</select>
    <select alias="SAMPLE_ID" type="number" group="agg">MAX(COALESCE(SAMPLING_B.ID, SPECIE_B.ID))</select>
    <select alias="SAMPLE_RANK_ORDER" type="number" group="agg">MAX(COALESCE(SAMPLING_B.FLAT_RANK_ORDER, SPECIE_B.FLAT_RANK_ORDER))</select>
    <select alias="REFERENCE_TAXON_ID" type="number">LENGTH_B.REFERENCE_TAXON_FK</select>
    <select alias="PARAMETER_ID" type="number">LENGTH_SV.PARAMETER_FK</select>

    <from alias="S">&amp;stationTableName</from>
    <from join="true">INNER JOIN DENORMALIZED_BATCH SPECIE_B ON SPECIE_B.OPERATION_FK = S.STATION_ID</from>
    <from join="true">INNER JOIN TAXON_GROUP TG ON TG.ID = SPECIE_B.INHERITED_TAXON_GROUP_FK</from>
    <from join="true">LEFT OUTER JOIN DENORMALIZED_BATCH_SORT_VAL SM ON SM.BATCH_FK=SPECIE_B.ID</from>
    <from join="true">LEFT OUTER JOIN QUALITATIVE_VALUE QV ON QV.ID=SM.QUALITATIVE_VALUE_FK</from>
    <from join="true">LEFT OUTER JOIN DENORMALIZED_BATCH SAMPLING_B ON SAMPLING_B.PARENT_BATCH_FK = SPECIE_B.ID AND COALESCE(SAMPLING_B.SAMPLING_RATIO, 1) &gt; 0</from>

    <!-- join individual measure, to be able to compute sampling by length_code and taxon -->
    <from join="true">LEFT OUTER JOIN DENORMALIZED_BATCH LENGTH_B ON LENGTH_B.PARENT_BATCH_FK=COALESCE(SAMPLING_B.ID, SPECIE_B.ID)</from>
    <from join="true">LEFT OUTER JOIN DENORMALIZED_BATCH_SORT_VAL LENGTH_SV ON LENGTH_SV.BATCH_FK=LENGTH_B.ID AND LENGTH_SV.PMFM_FK in (&amp;lengthPmfmIds) AND LENGTH_SV.IS_INHERITED=false</from>
    <from join="true">LEFT OUTER JOIN UNIT ON UNIT.ID = LENGTH_SV.UNIT_FK</from>
    <from join="true">LEFT OUTER JOIN TAXON_NAME TN ON TN.REFERENCE_TAXON_FK = LENGTH_B.REFERENCE_TAXON_FK AND TN.IS_REFERENT=true</from>

    <where>1=1</where>

    <!-- Make sure to skip individual measurement -->
    <where operator="AND">SPECIE_B.LABEL NOT LIKE 'SORTING_BATCH_INDIVIDUAL#%'</where>
    <where operator="AND">(SAMPLING_B.ID IS NULL OR SAMPLING_B.LABEL NOT LIKE 'SORTING_BATCH_INDIVIDUAL#%')</where>

    <!-- Case when QV pmfm exists -->
    <!-- Select batch with LANDING/DISCARD defined and a TAXON_GROUP -->
    <where operator="AND" group="hasLandingOrDiscardPmfm"><![CDATA[
      (SPECIE_B.IS_LANDING <> SPECIE_B.IS_DISCARD AND ((SPECIE_B.TAXON_GROUP_FK IS NOT NULL AND SM.IS_INHERITED=true) OR (SPECIE_B.TAXON_GROUP_FK IS NULL AND SM.IS_INHERITED=false)))
    ]]></where>
    <!-- Case when no QV pmfm (e.g. program 'LOGBOOK-LOBSTER' for SFA) -->
    <where operator="AND" group="!hasLandingOrDiscardPmfm">
      SPECIE_B.TAXON_GROUP_FK IS NOT NULL
    </where>

    <!-- exclude species without weight or individual count  -->
    <where operator="AND" group="excludeNoWeight">
      SPECIE_B.ELEVATE_WEIGHT IS NOT NULL
    </where>

    <!-- 'OR IS NULL' is needed for postgresql -->
    <where operator="AND" group="excludeInvalidStation">
      (S.FISHING_VALIDITY != UPPER('I') OR S.FISHING_VALIDITY IS NULL)
    </where>


    <groupby>&amp;groupByColumns</groupby>
    <groupby>SPECIE_B.ID,SAMPLING_B.ID,SAMPLING_B.ELEVATE_RTP_WEIGHT</groupby>

    <orderby>TRIP_CODE ASC, STATION_NUMBER ASC, SAMPLE_RANK_ORDER ASC</orderby>

  </query>

</queries>
