<?xml version="1.0" encoding="UTF-8"?>
<!--
  #%L
  Dali :: Core
  %%
  Copyright (C) 2017 Ifremer
  %%
  This program is free software: you can redistribute it and/or modify
  it under the terms of the GNU Affero General Public License as published by
  the Free Software Foundation, either version 3 of the License, or
  (at your option) any later version.

  This program is distributed in the hope that it will be useful,
  but WITHOUT ANY WARRANTY; without even the implied warranty of
  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  GNU General Public License for more details.

  You should have received a copy of the GNU Affero General Public License
  along with this program.  If not, see <http://www.gnu.org/licenses/>.
  #L%
  -->

<queries name="extractionCreateStationTable">

  <query type="create" temp="false" table="&amp;stationTableName" option="DISTINCT">

    <!-- PK -->
    <select alias="RECORD_TYPE" type="text" group="recordType,agg">UPPER('HH')</select>
    <select alias="SAMPLING_TYPE" type="text">T.SAMPLING_TYPE</select>
    <select alias="LANDING_COUNTRY" type="text">T.LANDING_COUNTRY</select>
    <select alias="VESSEL_FLAG_COUNTRY" type="text">T.VESSEL_FLAG_COUNTRY</select>
    <select alias="YEAR" type="number">T.YEAR</select>
    <select alias="PROJECT" type="text">T.PROJECT</select>
    <select alias="TRIP_CODE" type="number">T.TRIP_CODE</select>
    <select alias="STATION_NUMBER" type="number" dbms="oracle,pgsql" group="!adagio,!operationIdsFilter">ROW_NUMBER() OVER (PARTITION BY O.TRIP_FK ORDER BY O.START_DATE_TIME)</select>
    <select alias="STATION_NUMBER" type="number" dbms="oracle" group="adagio,!operationIdsFilter">ROW_NUMBER() OVER (PARTITION BY O.FISHING_TRIP_FK ORDER BY O.START_DATE_TIME)</select>
    <select alias="STATION_NUMBER" type="number" dbms="oracle,pgsql" group="!adagio,agg,operationIdsFilter"><![CDATA[
      (SELECT COUNT(*) + 1
        FROM operation O2
        WHERE O2.TRIP_FK = T.TRIP_CODE
        AND (O2.START_DATE_TIME < O.START_DATE_TIME OR (O2.START_DATE_TIME = O.START_DATE_TIME AND O2.ID < O.ID))
        AND NOT (O2.START_DATE_TIME = T.DEPARTURE_DATE_TIME AND O2.END_DATE_TIME = T.RETURN_DATE_TIME)
      )
    ]]></select>
    <select alias="STATION_NUMBER" type="number" dbms="oracle" group="adagio,agg,operationIdsFilter"><![CDATA[
      (SELECT COUNT(*) + 1
        FROM operation O2
        WHERE O2.FISHING_TRIP_FK = T.TRIP_CODE
        AND (O2.START_DATE_TIME < O.START_DATE_TIME OR (O2.START_DATE_TIME = O.START_DATE_TIME AND O2.ID < O.ID))
        AND NOT (O2.START_DATE_TIME = T.DEPARTURE_DATE_TIME AND O2.END_DATE_TIME = T.RETURN_DATE_TIME)
      )
    ]]></select>
    <select alias="STATION_NUMBER" type="number" dbms="hsqldb" group="agg"><![CDATA[
      (SELECT COUNT(*) + 1
        FROM operation O2
        WHERE O2.TRIP_FK = T.TRIP_CODE
        AND (O2.START_DATE_TIME < O.START_DATE_TIME OR (O2.START_DATE_TIME = O.START_DATE_TIME AND O2.ID < O.ID))
        AND NOT (O2.START_DATE_TIME = T.DEPARTURE_DATE_TIME AND O2.END_DATE_TIME = T.RETURN_DATE_TIME)
      )
    ]]></select>

    <!-- other fields -->
    <select alias="FISHING_VALIDITY" type="text" group="tripProgress,agg">
      MAX(
        CASE VUM.PMFM_FK WHEN &amp;tripProgressPmfmId THEN
          CASE VUM.NUMERICAL_VALUE
            WHEN 1 THEN UPPER('V')
            WHEN 0 THEN UPPER('I')
          ELSE null END
        ELSE null END
      )
    </select>
    <select alias="FISHING_VALIDITY" type="text" group="!tripProgress,adagio,agg">
      MAX(CASE TO_NUMBER(O.QUALITY_FLAG_FK)
      WHEN &amp;badQualityFlagId THEN UPPER('I')
      WHEN &amp;incompleteQualityFlagId THEN UPPER('I')
      WHEN &amp;missingQualityFlagId THEN UPPER('I')
      ELSE UPPER('V')
      END)
    </select>
    <select alias="FISHING_VALIDITY" type="text" group="!tripProgress,!adagio,agg">
      MAX(CASE O.QUALITY_FLAG_FK
      WHEN &amp;badQualityFlagId THEN UPPER('I')
      WHEN &amp;incompleteQualityFlagId THEN UPPER('I')
      WHEN &amp;missingQualityFlagId THEN UPPER('I')
      ELSE UPPER('V')
      END)
    </select>
    <select alias="AGGREGATION_LEVEL" type="text">UPPER('H')</select>
    <select alias="CATCH_REGISTRATION" type="text">'All'</select><!-- TODO : check batch lan/dis using DenormalizedOperation - see issue sumaris-app#553 -->
    <select alias="SPECIES_REGISTRATION" type="text">'Par'</select><!-- TODO : check batch exhaustiveness -->
    <select alias="DATE" type="text" group="date,agg">MAX(TO_CHAR(COALESCE(O.FISHING_START_DATE_TIME, O.START_DATE_TIME), 'YYYY-MM-DD'))</select>
    <select alias="TIME" type="text" group="time,agg">MAX(TO_CHAR(COALESCE(O.FISHING_START_DATE_TIME, O.START_DATE_TIME), 'HH24:MI'))</select>

    <!-- FISHING TIME -->
    <select alias="FISHING_TIME" type="number" dbms="hsqldb" group="fishingTime,agg">MAX(DATEDIFF('minute', COALESCE(O.FISHING_START_DATE_TIME, O.START_DATE_TIME), COALESCE(O.FISHING_END_DATE_TIME, O.END_DATE_TIME)))</select>
    <select alias="FISHING_TIME" type="number" dbms="pgsql" group="fishingTime,agg">MAX(F_DATEDIFF('minute', COALESCE(O.FISHING_START_DATE_TIME, O.START_DATE_TIME), COALESCE(O.FISHING_END_DATE_TIME, O.END_DATE_TIME)))</select>
    <select alias="FISHING_TIME" type="number" dbms="oracle" group="fishingTime,agg">MAX(CAST(FLOOR((COALESCE(O.FISHING_END_DATE_TIME, O.END_DATE_TIME) - COALESCE(O.FISHING_START_DATE_TIME, O.START_DATE_TIME)) * 24 * 60) as INTEGER))</select>

    <select alias="POS_START_LAT" type="number" dbms="hsqldb,pgsql" group="agg">MAX(P_START.LATITUDE)</select>
    <select alias="POS_START_LAT" type="number" dbms="oracle" group="agg">MAX(CAST(P_START.LATITUDE AS NUMBER(38, 7)))</select>
    <select alias="POS_START_LON" type="number" dbms="hsqldb,pgsql" group="agg">MAX(P_START.LONGITUDE)</select>
    <select alias="POS_START_LON" type="number" dbms="oracle" group="agg">MAX(CAST(P_START.LONGITUDE AS NUMBER(38, 7)))</select>
    <select alias="POS_END_LAT" type="number" dbms="hsqldb,pgsql" group="agg">MAX(P_END.LATITUDE)</select>
    <select alias="POS_END_LAT" type="number" dbms="oracle" group="agg">MAX(CAST(P_END.LATITUDE AS NUMBER(38, 7)))</select>
    <select alias="POS_END_LON" type="number" dbms="hsqldb,pgsql" group="agg">MAX(P_END.LONGITUDE)</select>
    <select alias="POS_END_LON" type="number" dbms="oracle" group="agg">MAX(CAST(P_END.LONGITUDE AS NUMBER(38, 7)))</select>

    <select alias="AREA" type="text" dbms="hsqldb,pgsql" group="agg">
      MAX(
        CASE
          WHEN L_AREA.LOCATION_LEVEL_FK IN (&amp;areaLocationLevelIds) THEN
            L_AREA.LABEL
          ELSE NULL
        END
      )
    </select>
    <select alias="AREA" type="text" dbms="oracle" group="agg">
      MAX(
        CASE WHEN L_AREA.LOCATION_LEVEL_FK IN (&amp;areaLocationLevelIds) THEN
        L_AREA.LABEL
        ELSE
          CAST(null as VARCHAR2(10))
        END
      )
    </select>

    <select alias="STATISTICAL_RECTANGLE" type="text" dbms="hsqldb,pgsql" group="agg">
      MAX(
        CASE
          WHEN P_END.LATITUDE IS NOT NULL AND P_END.LONGITUDE IS NOT NULL THEN
            F_TO_RECTANGLE(P_END.LATITUDE, P_END.LONGITUDE)
          WHEN L_AREA.LOCATION_LEVEL_FK IN (&amp;rectangleLocationLevelIds) THEN
            L_AREA.LABEL
          ELSE NULL
        END
      )
    </select>

    <!-- TODO adapt the function 'F_TO_RECTANGLE' for Oracle, or use spatial query  -->
    <select alias="STATISTICAL_RECTANGLE" type="text" dbms="oracle" group="agg">
      MAX(
        CASE WHEN L_AREA.LOCATION_LEVEL_FK IN (&amp;rectangleLocationLevelIds) THEN
          L_AREA.LABEL
        ELSE
          CAST(null as VARCHAR2(40))
        END
      )
    </select>

    <!-- TODO: use SIH sub polygon
    <select alias="SUB_POLYGON" type="text">F_TO_SQUARE(P_END.LATITUDE, P_END.LONGITUDE, 10)</select>-->
    <select alias="SUB_POLYGON" type="text" dbms="hsqldb,pgsql">null</select>
    <select alias="SUB_POLYGON" type="text" dbms="oracle" group="agg">CAST(null as VARCHAR2(10))</select>

    <select alias="MAIN_FISHING_DEPTH" group="agg" type="number">
      MAX(CASE VUM.PMFM_FK WHEN &amp;mainFishingDepthPmfmId THEN CAST(ROUND(VUM.NUMERICAL_VALUE) AS INTEGER) ELSE NULL END)
    </select>
    <select alias="MAIN_WATER_DEPTH" group="agg" type="number">
      MAX(CASE VUM.PMFM_FK WHEN &amp;mainWaterDepthPmfmId THEN CAST(ROUND(VUM.NUMERICAL_VALUE) AS INTEGER) ELSE NULL END)
    </select>

    <select alias="NATIONAL_METIER" type="text"  group="agg">
      MAX(CASE TG_M.TAXON_GROUP_TYPE_FK WHEN &amp;nationalTaxonGroupTypeId THEN M.LABEL ELSE NULL END)
    </select>
    <select alias="EU_METIER_LEVEL5" type="text" group="agg">
      MAX(CASE TG_M.TAXON_GROUP_TYPE_FK WHEN &amp;ueLevel5TaxonGroupTypeId THEN M.LABEL ELSE NULL END)
    </select>

    <select alias="EU_METIER_LEVEL6" type="text" dbms="hsqldb,pgsql">null</select>
    <select alias="EU_METIER_LEVEL6" type="text" dbms="oracle" group="agg">CAST(null as VARCHAR2(10))</select>

    <select alias="GEAR_TYPE" type="text" group="gearType,agg">MAX(G.LABEL)</select>
    <select alias="MESH_SIZE" type="number" group="agg">
      MAX(CASE PGM.PMFM_FK WHEN &amp;meshSizePmfmId THEN CAST(ROUND(PGM.NUMERICAL_VALUE) AS INTEGER) ELSE NULL END)
    </select>
    <!-- TODO use the RDB code list - see issue #146 -->
    <select alias="SELECTION_DEVICE" type="text" group="selectionDevice,agg">
      MAX(CASE WHEN PGM.PMFM_FK IN (&amp;selectionDevicePmfmIds) THEN PGQV.LABEL ELSE NULL END)
    </select>

    <select alias="MESH_SIZE_IN_SELECTION_DEVICE" type="text" group="agg" dbms="oracle">CAST(null as VARCHAR2(10))</select>
    <select alias="MESH_SIZE_IN_SELECTION_DEVICE" type="text" dbms="hsqldb,pgsql">null</select>

    <!-- need to link other tables -->
    <select alias="STATION_ID" type="hidden">O.ID</select>

    <!-- Adagio DB - keep the catch batch id -->
    <select alias="CATCH_BATCH_ID" type="hidden" group="adagio">O.CATCH_BATCH_FK</select>

    <from alias="T">&amp;tripTableName</from>

    <!-- Legacy DB joins -->
    <from join="true" group="!adagio">INNER JOIN OPERATION O ON O.TRIP_FK = T.TRIP_CODE</from>
    <from join="true" group="!adagio">LEFT OUTER JOIN METIER M ON M.ID = O.METIER_FK</from>
    <from join="true" group="!adagio">LEFT OUTER JOIN TAXON_GROUP TG_M ON TG_M.ID = M.TAXON_GROUP_FK</from>
    <from join="true" group="!adagio">LEFT OUTER JOIN PHYSICAL_GEAR PG ON PG.ID = O.PHYSICAL_GEAR_FK</from>

    <!-- Adagio DB joins (skip SUMARiS VIEW) -->
    <from join="true" group="adagio">INNER JOIN &amp;adagioSchema.OPERATION O ON O.FISHING_TRIP_FK = T.TRIP_CODE</from>
    <from join="true" group="adagio">LEFT OUTER JOIN &amp;adagioSchema.GEAR_USE_FEATURES GUF ON GUF.OPERATION_FK = O.ID</from>
    <from join="true" group="adagio">LEFT OUTER JOIN METIER M ON M.ID = GUF.METIER_FK</from>
    <from join="true" group="adagio">LEFT OUTER JOIN TAXON_GROUP TG_M ON TG_M.ID = M.TAXON_GROUP_FK</from>
    <from join="true" group="adagio">LEFT OUTER JOIN PHYSICAL_GEAR PG ON PG.ID = O.GEAR_PHYSICAL_FEATURES_FK</from>

    <from join="true">LEFT OUTER JOIN GEAR G ON G.ID = PG.GEAR_FK</from>
    <from join="true">LEFT OUTER JOIN VESSEL_USE_MEASUREMENT VUM ON VUM.OPERATION_FK = O.ID</from>
    <from join="true">LEFT OUTER JOIN QUALITATIVE_VALUE QV on QV.ID = VUM.QUALITATIVE_VALUE_FK</from>
    <from join="true">LEFT OUTER JOIN PHYSICAL_GEAR_MEASUREMENT PGM ON PGM.PHYSICAL_GEAR_FK = PG.ID</from>
    <from join="true">LEFT OUTER JOIN QUALITATIVE_VALUE PGQV on PGQV.ID = PGM.QUALITATIVE_VALUE_FK</from>

    <from join="true">LEFT OUTER JOIN FISHING_AREA FA ON FA.OPERATION_FK = O.ID</from>
    <from join="true">LEFT OUTER JOIN LOCATION L_AREA ON L_AREA.ID = FA.LOCATION_FK</from>
    <from join="true">LEFT OUTER JOIN VESSEL_POSITION P_START ON P_START.OPERATION_FK = O.ID and P_START.DATE_TIME=COALESCE(O.FISHING_START_DATE_TIME, O.START_DATE_TIME)</from>
    <from join="true">LEFT OUTER JOIN VESSEL_POSITION P_END ON P_END.OPERATION_FK = O.ID and P_END.DATE_TIME=COALESCE(O.FISHING_END_DATE_TIME, O.END_DATE_TIME)</from>

    <where>1=1</where>

    <where operator="AND" group="excludeOperationGroup">
      NOT (O.START_DATE_TIME=T.DEPARTURE_DATE_TIME AND O.END_DATE_TIME=T.RETURN_DATE_TIME)
    </where>

    <where operator="AND" group="operationIdsFilter">
      O.ID IN (&amp;operationIds)
    </where>

    <groupby>&amp;groupByColumns</groupby>

    <groupby dbms="pgsql,oracle" group="operationIdsFilter">O.START_DATE_TIME, T.DEPARTURE_DATE_TIME, T.RETURN_DATE_TIME, O.ID</groupby>
    <groupby dbms="hsqldb">STATION_NUMBER</groupby>
  </query>

</queries>
