<?xml version="1.0" encoding="UTF-8"?>
<queries name="selectSellPbPacket">
    <query type="select">
        <select type="number" alias="ID_MAREE">FT.ID</select>
        <select type="number" alias="ID_DEBARQUEMENT">L.ID</select>
        <select type="number" alias="ID_VENTE">S.ID</select>

        <select type="" alias="NAVIRE">FT.VESSEL_FK</select>
        <select type="" alias="IMMATRICULATION">VRP.REGISTRATION_CODE</select>
        <select type="" alias="DATE_DEPART">FT.DEPARTURE_DATE_TIME</select>
        <select type="" alias="DATE_RETOUR">FT.RETURN_DATE_TIME</select>
        <select type="" alias="DATE_DEBARQ">L.LANDING_DATE_TIME</select>
        <select type="" alias="QUARTIER_COD">LOCQ.LABEL</select>
        <select type="" alias="QUARTIER_LIB">LOCQ.NAME</select>
        <select type="" alias="ATELIER_COD">LOCR.LABEL</select>
        <select type="" alias="ATELIER_LIB">LOCR.NAME</select>
        <select type="" alias="PORTVEN_TYP">LOCVEN.LOCATION_LEVEL_FK</select>
        <select type="" alias="PORTVEN_COD">LOCVEN.LABEL</select>
        <select type="" alias="PORTVEN_LIB">LOCVEN.NAME</select>
        <select type="" alias="VENTE_TOTAL_ESTIME">SELECT SUM(SM.NUMERICAL_VALUE)
            FROM SALE_MEASUREMENT SM
            WHERE SM.EXPECTED_SALE_FK = S.ID
            AND SM.PMFM_FK = 269
        </select>
        <select type="" alias="VENTE_TYPE">ST.NAME</select>
        <select type="" alias="ESP_COD_FAO">TG.LABEL</select>
        <select type="" alias="ESP_LIB_FAO">TG.NAME</select>
        <select type="" alias="QUANTITE_VENTE">round(P.WEIGHT,2)</select>
        <select type="" alias="QUANTITE_INDIV_VENTE">P.INDIVIDUAL_COUNT</select>
        <select type="" alias="PACKAGING">select QV.NAME
            from SORTING_MEASUREMENT_P SMP
            inner join QUALITATIVE_VALUE QV on SMP.QUALITATIVE_VALUE_FK = QV.ID
            where SMP.PRODUCE_FK = P.ID
            and SMP.PMFM_FK = 277
        </select>
        <select type="" alias="AVG_PACKAGING_PRICE">round(
            coalesce(
            (
            select S.NUMERICAL_VALUE
            from SORTING_MEASUREMENT_P S
            where S.PRODUCE_FK = P.ID
            and S.PMFM_FK = 274 --"+context.PMFM_PRODUCT_AVG_PRICE_UNIT+"
            ),
            (
            select S.NUMERICAL_VALUE
            from SORTING_MEASUREMENT_P S
            where S.PRODUCE_FK = P.ID
            and S.PMFM_FK = 273 --"+context.PMFM_PRODUCT_AVG_PRICE_VOLUME+"
            ),
            (
            select S.NUMERICAL_VALUE
            from SORTING_MEASUREMENT_P S
            where S.PRODUCE_FK = P.ID
            and S.PMFM_FK = 275 --"+context.PMFM_PRODUCT_AVG_PRICE_DOZEN+"
            ),
            (
            select S.NUMERICAL_VALUE
            from SORTING_MEASUREMENT_P S
            where S.PRODUCE_FK = P.ID
            and S.PMFM_FK = 276 --"+context.PMFM_PRODUCT_AVG_PRICE_HUNDRED+"
            ),
            (
            select S.NUMERICAL_VALUE
            from SORTING_MEASUREMENT_P S
            where S.PRODUCE_FK = P.ID
            and S.PMFM_FK = 347 --"+context.PMFM_PRODUCT_AVG_PRICE_PIECE+"
            )
            )
            ,2)
        </select>
        <select type="" alias="AVG_WEIGHT_PRICE">round(
            (
            select S.NUMERICAL_VALUE
            from SORTING_MEASUREMENT_P S
            where S.PRODUCE_FK = P.ID
            and S.PMFM_FK = 271
            )
            ,2)
        </select>
        <select type="" alias="TOTAL_PRICE">round(P.COST, 2)</select>
        <select type="" alias="ID_PACKET">P.BATCH_FK </select>

        <from alias="FT">FISHING_TRIP</from>
        <from join="true">inner join VESSEL_REGISTRATION_PERIOD vrp on vrp.VESSEL_FK = FT.VESSEL_FK and vrp.END_DATE_TIME is null</from>
        <from join="true">inner join LANDING L on L.FISHING_TRIP_FK = FT.ID</from>
        <from join="true">inner join EXPECTED_SALE S on S.OBSERVED_LANDING_FK = L.ID or S.FISHING_TRIP_FK = FT.ID</from>
        <from join="true">inner join LOCATION LOCVEN on LOCVEN.ID = S.SALE_LOCATION_FK</from>
        <from join="true">inner join LOCATION_HIERARCHY LOCHQ on LOCHQ.CHILD_LOCATION_FK = L.LANDING_LOCATION_FK</from>
        <from join="true">inner join LOCATION LOCQ on LOCQ.ID = LOCHQ.PARENT_LOCATION_FK</from>
        <from join="true">inner join LOCATION_HIERARCHY LOCHR on LOCHR.CHILD_LOCATION_FK = L.LANDING_LOCATION_FK</from>
        <from join="true">inner join LOCATION LOCR on LOCR.ID = LOCHR.PARENT_LOCATION_FK</from>
        <from join="true">inner join PRODUCE P on P.EXPECTED_SALE_FK = S.ID</from>
        <from join="true">inner join TAXON_GROUP TG on P.TAXON_GROUP_FK = TG.ID</from>
        <from join="true">inner join SALE_TYPE ST on ST.ID = P.SALE_TYPE_FK</from>

        <where>1=1</where>
        <where operator="AND">LOCQ.LOCATION_LEVEL_FK = 32</where>
        <where operator="AND">LOCR.LOCATION_LEVEL_FK = 31</where>
        <where operator="AND">L.PROGRAM_FK in ('SIH-OBSDEB', 'SIH-TELDEB', 'SIH-OPRDEB', 'ARTFISH','SCHOONER','WHALER')</where>
        <where operator="AND">FT.ID=231400</where>
    </query>
</queries>