<?xml version="1.0" encoding="UTF-8"?>
<!--
  #%L
  Dali :: Core
  %%
  Copyright (C) 2017 Ifremer
  %%
  This program is free software: you can redistribute it and/or modify
  it under the terms of the GNU Affero General Public License as published by
  the Free Software Foundation, either version 3 of the License, or
  (at your option) any later version.
  
  This program is distributed in the hope that it will be useful,
  but WITHOUT ANY WARRANTY; without even the implied warranty of
  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  GNU General Public License for more details.
  
  You should have received a copy of the GNU Affero General Public License
  along with this program.  If not, see <http://www.gnu.org/licenses/>.
  #L%
  -->

<queries name="extractionCreateCatchTable">

  <query type="create" temp="false" table="&amp;catchTableName">

    <!-- PK (inherited) -->
    <select alias="RECORD_TYPE" type="text" group="recordType">'CT'</select>
    <select alias="SAMPLING_TYPE" type="text">S.SAMPLING_TYPE</select>
    <select alias="LANDING_COUNTRY" type="text">S.LANDING_COUNTRY</select>
    <select alias="VESSEL_FLAG_COUNTRY" type="text">S.VESSEL_FLAG_COUNTRY</select>
    <select alias="YEAR" type="number">S.YEAR</select>
    <select alias="PROJECT" type="text">S.PROJECT</select>
    <select alias="TRIP_CODE" type="number">S.TRIP_CODE</select>
    <select alias="STATION_NUMBER" type="number">S.STATION_NUMBER</select>

    <!-- PK (new fields) -->
    <injection name="pmfmsInjection" type="select" group="injectionPoint"/>

    <!-- Weights -->
    <select alias="CATCH_WEIGHT" type="number" group="agg">CAST(MAX(CATCH.WEIGHT * 1000) AS INT)</select>
    <select alias="DISCARD_WEIGHT" type="number" group="agg">CAST(SUM(VRAC_HV.WEIGHT) / COUNT(DISTINCT VRAC_HV.ID)  * 1000 AS INT)</select>

    <!-- Make to have one row by catch batch -->
    <select alias="STATION_ID" type="hidden">S.STATION_ID</select>
    <select alias="CATCH_ID" type="hidden">CATCH.ID</select>

    <from alias="S">&amp;stationTableName</from>
    <from join="true">INNER JOIN DENORMALIZED_BATCH CATCH ON CATCH.OPERATION_FK = S.STATION_ID</from>
    <from join="true">INNER JOIN QUANTIFICATION_MEASUREMENT_B QM ON QM.BATCH_FK=CATCH.ID AND QM.PMFM_FK=&amp;catchWeightPmfmId AND QM.IS_REFERENCE_QUANTIFICATION=true</from>
    <from join="true">LEFT OUTER JOIN DENORMALIZED_BATCH_SORT_VAL SM ON SM.BATCH_FK=CATCH.ID</from>
    <from join="true">LEFT OUTER JOIN QUALITATIVE_VALUE QV ON QV.ID=SM.QUALITATIVE_VALUE_FK</from>
    <from join="true">LEFT OUTER JOIN DENORMALIZED_BATCH DISCARD ON DISCARD.PARENT_BATCH_FK = CATCH.ID AND DISCARD.IS_DISCARD=1 AND DISCARD.IS_LANDING=0</from>
    <from join="true">LEFT OUTER JOIN DENORMALIZED_BATCH VRAC_HV ON VRAC_HV.PARENT_BATCH_FK = DISCARD.ID</from>

    <where>1=1</where>

    <!-- exclude catch without weight -->
    <where operator="AND" group="excludeNoWeight">CATCH.WEIGHT IS NOT NULL</where>

    <!-- 'OR IS NULL' is needed for postgresql -->
    <where operator="AND" group="excludeInvalidStation"><![CDATA[S.FISHING_VALIDITY != UPPER('I') OR S.FISHING_VALIDITY IS NULL ]]></where>


    <groupby>&amp;groupByColumns</groupby>

    <orderby>STATION_NUMBER ASC</orderby>

  </query>

</queries>
