<?xml version="1.0" encoding="UTF-8"?>
<!--
  #%L
  Dali :: Core
  %%
  Copyright (C) 2017 Ifremer
  %%
  This program is free software: you can redistribute it and/or modify
  it under the terms of the GNU Affero General Public License as published by
  the Free Software Foundation, either version 3 of the License, or
  (at your option) any later version.
  
  This program is distributed in the hope that it will be useful,
  but WITHOUT ANY WARRANTY; without even the implied warranty of
  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  GNU General Public License for more details.
  
  You should have received a copy of the GNU Affero General Public License
  along with this program.  If not, see <http://www.gnu.org/licenses/>.
  #L%
  -->

<queries name="extractionCreateStrategyMonitoringTable">

  <query type="create" temp="false" table="&amp;strategyMonitoringTableName" option="DISTINCT">

    <!-- PK -->
    <select alias="RECORD_TYPE" type="text" group="recordType">UPPER('SM')</select>
    <select alias="PROJECT" type="text">ST.PROJECT</select>
    <select alias="STRATEGY" type="text">ST.STRATEGY</select>

    <!-- other fields -->
    <select alias="START_DATE" type="date">AP.START_DATE</select>
    <select alias="END_DATE" type="date">AP.END_DATE</select>

    <select alias="EXPECTED_EFFORT" type="number">AP.ACQUISITION_NUMBER</select>
    <select alias="REALIZED_EFFORT" type="number">count(distinct SM.ID)</select> <!-- count sample with a TAG_ID -->

    <select alias="LANDING_COUNT" type="number">count(distinct L.ID)</select>
    <select alias="SCIENTIFIC_CRUISE_COUNT" type="number">count(distinct SC.ID)</select>

    <!-- hidden columns -->
    <select alias="PROGRAM_ID" type="hidden">ST.PROGRAM_ID</select>
    <select alias="STRATEGY_ID" type="hidden">ST.STRATEGY_ID</select>

    <from alias="ST">&amp;strategyTableName</from>
    <from join="true">LEFT OUTER JOIN APPLIED_STRATEGY S ON S.STRATEGY_FK = ST.STRATEGY_ID</from>
    <from join="true">LEFT OUTER JOIN APPLIED_PERIOD AP ON AP.APPLIED_STRATEGY_FK = S.ID</from>

    <!-- default implementation -->
    <from join="true" group="!adagio">LEFT OUTER JOIN SAMPLE SA ON SA.PROGRAM_FK = ST.PROGRAM_ID
      AND SA.SAMPLE_DATE BETWEEN AP.START_DATE AND (AP.END_DATE + INTERVAL '1' DAY)
    </from>

    <from join="true" group="!adagio">LEFT OUTER JOIN OPERATION O ON O.ID = SA.OPERATION_FK</from>
    <from join="true" group="!adagio">LEFT OUTER JOIN TRIP FT ON FT.ID = O.TRIP_FK</from>
    <from join="true" group="!adagio">LEFT OUTER JOIN SCIENTIFIC_CRUISE SC ON SC.ID = FT.SCIENTIFIC_CRUISE_FK</from>
    <from join="true" group="!adagio">LEFT OUTER JOIN LANDING L ON L.TRIP_FK = FT.ID</from>

    <!-- Use optimization for ADAGIO (fix IMAGINE issue) -->
    <from join="true" group="adagio">LEFT OUTER JOIN &amp;adagioSchema.SAMPLE SA ON SA.PROGRAM_FK = ST.PROJECT
        AND SA.SAMPLE_DATE BETWEEN AP.START_DATE AND (AP.END_DATE + INTERVAL '1' DAY)
    </from>
    <from join="true" group="adagio">LEFT OUTER JOIN &amp;adagioSchema.OPERATION O ON O.ID = SA.FISHING_OPERATION_FK</from>
    <from join="true" group="adagio">LEFT OUTER JOIN &amp;adagioSchema.FISHING_TRIP FT ON FT.ID = O.FISHING_TRIP_FK</from>
    <from join="true" group="adagio">LEFT OUTER JOIN &amp;adagioSchema.SCIENTIFIC_CRUISE SC ON SC.ID = FT.SCIENTIFIC_CRUISE_FK</from>
    <from join="true" group="adagio">LEFT OUTER JOIN &amp;adagioSchema.LANDING L ON L.FISHING_TRIP_FK = FT.ID</from>

    <from join="true">LEFT OUTER JOIN SAMPLE_MEASUREMENT SM ON SM.SAMPLE_FK = SA.ID AND SM.PMFM_FK = &amp;tagIdPmfmId
      AND SM.ALPHANUMERICAL_VALUE LIKE (ST.STRATEGY || '%')
    </from>
    <from join="true">LEFT OUTER JOIN LANDING_MEASUREMENT LM ON LM.LANDING_FK = L.ID AND LM.PMFM_FK = &amp;strategyLabelPmfmId
      AND LM.ALPHANUMERICAL_VALUE = ST.STRATEGY
    </from>

    <where>1=1</where>

    <groupby>
      ST.PROJECT, ST.STRATEGY,
      ST.PROGRAM_ID, ST.STRATEGY_ID,
      AP.START_DATE, AP.END_DATE, AP.ACQUISITION_NUMBER
    </groupby>

  </query>

</queries>
