<?xml version="1.0" encoding="UTF-8"?>
<!--
  #%L
  Dali :: Core
  %%
  Copyright (C) 2017 Ifremer
  %%
  This program is free software: you can redistribute it and/or modify
  it under the terms of the GNU Affero General Public License as published by
  the Free Software Foundation, either version 3 of the License, or
  (at your option) any later version.
  
  This program is distributed in the hope that it will be useful,
  but WITHOUT ANY WARRANTY; without even the implied warranty of
  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  GNU General Public License for more details.
  
  You should have received a copy of the GNU Affero General Public License
  along with this program.  If not, see <http://www.gnu.org/licenses/>.
  #L%
  -->

<queries name="extractionCreateStrategyMonitoringTable">

  <query type="create" temp="false" table="&amp;strategyMonitoringTableName">

    <with alias="EFFORT">
      <subquery>

        <!-- PK -->
        <select alias="PROJECT" type="text">ST.PROJECT</select>
        <select alias="STRATEGY" type="text">ST.STRATEGY</select>

        <!-- other fields -->
        <select alias="START_DATE" type="date">AP.START_DATE</select>
        <select alias="END_DATE" type="date">AP.END_DATE</select>
        <select alias="ACQUISITION_NUMBER" type="number">AP.ACQUISITION_NUMBER</select>
        <select alias="SAMPLE_MEASUREMENT_ID" type="number">SM.ID</select>

        <from alias="ST">&amp;strategyTableName</from>
        <from join="true">INNER JOIN APPLIED_STRATEGY S ON S.STRATEGY_FK = ST.STRATEGY_ID</from>
        <from join="true">INNER JOIN APPLIED_PERIOD AP ON AP.APPLIED_STRATEGY_FK = S.ID</from>

        <!-- Default implementation (NOT adagio) -->
        <from join="true" group="!adagio">
          LEFT OUTER JOIN LANDING L ON L.PROGRAM_FK = ST.PROGRAM_ID
            AND L.LANDING_DATE_TIME &gt;= AP.START_DATE
            AND L.LANDING_DATE_TIME &lt; AP.END_DATE + INTERVAL '1' DAY
            AND EXISTS (
              SELECT 1 FROM LANDING_MEASUREMENT LM
              WHERE LM.LANDING_FK = L.ID
              AND LM.PMFM_FK = &amp;strategyLabelPmfmId
              AND LM.ALPHANUMERICAL_VALUE = ST.STRATEGY
            )
        </from>
        <from join="true" group="!adagio">LEFT OUTER JOIN TRIP FT ON FT.ID = L.TRIP_FK</from>
        <from join="true" group="!adagio">LEFT OUTER JOIN OPERATION O ON O.TRIP_FK = FT.ID</from>
        <from join="true" group="!adagio">LEFT OUTER JOIN SAMPLE SA ON SA.OPERATION_FK = O.ID</from>
        <from join="true" group="!adagio">LEFT OUTER JOIN SAMPLE_MEASUREMENT SM ON SM.SAMPLE_FK = SA.ID
          AND SM.PMFM_FK = &amp;tagIdPmfmId
          AND SM.ALPHANUMERICAL_VALUE LIKE (ST.STRATEGY || '%')
        </from>

        <!-- Use optimization for ADAGIO (fix IMAGINE issue) -->
        <from join="true" group="adagio">
          LEFT OUTER JOIN &amp;adagioSchema.LANDING L ON L.PROGRAM_FK = ST.PROJECT
          AND L.LANDING_DATE_TIME &gt;= AP.START_DATE
          AND L.LANDING_DATE_TIME &lt; AP.END_DATE + INTERVAL '1' DAY
          AND EXISTS (
            SELECT 1 FROM &amp;adagioSchema.LANDING_MEASUREMENT LM
            WHERE LM.LANDING_FK = L.ID
            AND LM.PMFM_FK = &amp;strategyLabelPmfmId
            AND LM.ALPHANUMERICAL_VALUE = ST.STRATEGY
          )
        </from>
        <from join="true" group="adagio">LEFT OUTER JOIN &amp;adagioSchema.FISHING_TRIP FT ON FT.ID = L.FISHING_TRIP_FK</from>
        <from join="true" group="adagio">LEFT OUTER JOIN &amp;adagioSchema.OPERATION O ON O.FISHING_TRIP_FK = FT.ID</from>
        <from join="true" group="adagio">LEFT OUTER JOIN &amp;adagioSchema.SAMPLE SA ON SA.FISHING_OPERATION_FK = O.ID</from>
        <from join="true" group="adagio">LEFT OUTER JOIN &amp;adagioSchema.SAMPLE_MEASUREMENT SM ON SM.SAMPLE_FK = SA.ID
          AND SM.PMFM_FK = &amp;tagIdPmfmId
          AND SM.ALPHANUMERICAL_VALUE LIKE (ST.STRATEGY || '%')
        </from>

        <!-- Scientific cruise (if enable) -->
        <union group="scientificCruise">
          <subquery>
            <!-- PK -->
            <select alias="PROJECT" type="text">ST.PROJECT</select>
            <select alias="STRATEGY" type="text">ST.STRATEGY</select>

            <!-- other fields -->
            <select alias="START_DATE" type="date">AP.START_DATE</select>
            <select alias="END_DATE" type="date">AP.END_DATE</select>
            <select alias="ACQUISITION_NUMBER" type="number">AP.ACQUISITION_NUMBER</select>
            <select alias="SAMPLE_MEASUREMENT_ID" type="number">SM.ID</select>

            <from alias="ST">&amp;strategyTableName</from>
            <from join="true">INNER JOIN PROGRAM P ON P.LABEL LIKE 'CAM-%'</from>
            <from join="true">INNER JOIN APPLIED_STRATEGY S ON S.STRATEGY_FK = ST.STRATEGY_ID</from>
            <from join="true">INNER JOIN APPLIED_PERIOD AP ON AP.APPLIED_STRATEGY_FK = S.ID</from>

            <!-- Default implementation (NOT adagio) -->
            <from join="true" group="!adagio">INNER JOIN SAMPLE SA ON SA.PROGRAM_FK = P.ID
              AND SA.SAMPLE_DATE &gt;= AP.START_DATE
              AND SA.SAMPLE_DATE &lt; AP.END_DATE + INTERVAL '1' DAY
            </from>
            <from join="true" group="!adagio">INNER JOIN SAMPLE_MEASUREMENT SM ON SM.SAMPLE_FK = SA.ID
              AND SM.PMFM_FK = &amp;tagIdPmfmId
              AND SM.ALPHANUMERICAL_VALUE LIKE (ST.STRATEGY || '%')
            </from>

            <!-- Use optimization for ADAGIO (fix IMAGINE issue) -->
            <from join="true" group="adagio">INNER JOIN &amp;adagioSchema.SAMPLE SA ON SA.PROGRAM_FK = P.LABEL
              AND SA.SAMPLE_DATE &gt;= AP.START_DATE
              AND SA.SAMPLE_DATE &lt; AP.END_DATE + INTERVAL '1' DAY
            </from>
            <from join="true" group="adagio">INNER JOIN &amp;adagioSchema.SAMPLE_MEASUREMENT SM ON SM.SAMPLE_FK = SA.ID
              AND SM.PMFM_FK = &amp;tagIdPmfmId
              AND SM.ALPHANUMERICAL_VALUE LIKE (ST.STRATEGY || '%')
            </from>
          </subquery>
        </union>


      </subquery>
    </with>

    <select alias="RECORD_TYPE" type="text" group="recordType">UPPER('SM')</select>
    <select alias="PROJECT" type="text">E.PROJECT</select>
    <select alias="STRATEGY" type="text">E.STRATEGY</select>

    <!-- other fields -->
    <select alias="START_DATE" type="date">E.START_DATE</select>
    <select alias="END_DATE" type="date">E.END_DATE</select>
    <select alias="EXPECTED_EFFORT" type="number">E.ACQUISITION_NUMBER</select>
    <select alias="REALIZED_EFFORT" type="number">COUNT(distinct E.SAMPLE_MEASUREMENT_ID)</select>

    <from alias="E">EFFORT</from>

    <groupby>
      E.PROJECT, E.STRATEGY, E.START_DATE, E.END_DATE, E.ACQUISITION_NUMBER
    </groupby>
  </query>

</queries>
