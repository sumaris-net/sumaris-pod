<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!--
  ~ #%L
  ~ SUMARiS
  ~ %%
  ~ Copyright (C) 2019 SUMARiS Consortium
  ~ %%
  ~ This program is free software: you can redistribute it and/or modify
  ~ it under the terms of the GNU General Public License as
  ~ published by the Free Software Foundation, either version 3 of the
  ~ License, or (at your option) any later version.
  ~
  ~ This program is distributed in the hope that it will be useful,
  ~ but WITHOUT ANY WARRANTY; without even the implied warranty of
  ~ MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  ~ GNU General Public License for more details.
  ~
  ~ You should have received a copy of the GNU General Public
  ~ License along with this program.  If not, see
  ~ <http://www.gnu.org/licenses/gpl-3.0.html>.
  ~ #L%
  -->

<databaseChangeLog
	xmlns="http://www.liquibase.org/xml/ns/dbchangelog"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.liquibase.org/xml/ns/dbchangelog http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-3.6.xsd"
	logicalFilePath="https://github.com/sumaris-net/sumaris-pod/blob/master/sumaris-core/src/main/resources/net/sumaris/core/db/changelog/hsqldb/all/db-changelog-1.10.0.xml">

	<property name="sqlCheck.not_empty.sql" value="SELECT COUNT(*) FROM STATUS WHERE ID=1"/>
	<property name="sqlCheck.not_empty.expectedResult" value="1"/>


	<!-- rename SALE_SEQ to EXPECTED_SALE_FK -->
	<changeSet author="ludovic.pecquot@e-is.pro" id="1625816880596-301" runOnChange="true">
		<preConditions onFail="MARK_RAN">
			<and>
				<sqlCheck expectedResult="${sqlCheck.not_empty.expectedResult}">${sqlCheck.not_empty.sql}</sqlCheck>
				<sequenceExists sequenceName="SALE_SEQ"/>
				<not>
					<sequenceExists sequenceName="EXPECTED_SALE_SEQ"/>
				</not>
			</and>
		</preConditions>
		<sql endDelimiter=";">
			alter sequence SALE_SEQ rename to EXPECTED_SALE_SEQ;
			commit;
		</sql>
		<createSequence sequenceName="SALE_SEQ" incrementBy="50" startValue="50"/>
	</changeSet>

  <!-- move data from SALE to EXPECTED_SALE -->
	<!-- BE CAREFUL: SALE not linked to a TRIP will not be copy (ex: linked by OBSERVED_LOCATION) -->
  <changeSet author="ludovic.pecquot@e-is.pro" id="1625816880596-302" runOnChange="true">
    <preConditions onFail="MARK_RAN">
      <tableIsEmpty tableName="EXPECTED_SALE"/>
    </preConditions>
    <sql endDelimiter=";">
			insert into EXPECTED_SALE(ID, SALE_DATE, SALE_LOCATION_FK, SALE_TYPE_FK, TRIP_FK, LANDING_FK)
			  select S.ID, S.START_DATE_TIME, S.SALE_LOCATION_FK, S.SALE_TYPE_FK, S.TRIP_FK, null
			  from SALE S
			  where S.TRIP_FK is not null;
			update SALE_MEASUREMENT set EXPECTED_SALE_FK=SALE_FK, SALE_FK=null
			  where SALE_FK in (select ES.ID from EXPECTED_SALE ES);
			update PRODUCT set EXPECTED_SALE_FK=SALE_FK, SALE_FK=null
			  where SALE_FK in (select ES.ID from EXPECTED_SALE ES);
			commit;
		</sql>
  </changeSet>


</databaseChangeLog>
