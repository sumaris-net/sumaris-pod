<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!--
  ~ #%L
  ~ SUMARiS
  ~ %%
  ~ Copyright (C) 2019 SUMARiS Consortium
  ~ %%
  ~ This program is free software: you can redistribute it and/or modify
  ~ it under the terms of the GNU General Public License as
  ~ published by the Free Software Foundation, either version 3 of the
  ~ License, or (at your option) any later version.
  ~
  ~ This program is distributed in the hope that it will be useful,
  ~ but WITHOUT ANY WARRANTY; without even the implied warranty of
  ~ MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  ~ GNU General Public License for more details.
  ~
  ~ You should have received a copy of the GNU General Public
  ~ License along with this program.  If not, see
  ~ <http://www.gnu.org/licenses/gpl-3.0.html>.
  ~ #L%
  -->

<databaseChangeLog
        xmlns="http://www.liquibase.org/xml/ns/dbchangelog"
        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xsi:schemaLocation="http://www.liquibase.org/xml/ns/dbchangelog http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-3.6.xsd"
        logicalFilePath="https://github.com/sumaris-net/sumaris-pod/blob/master/sumaris-core/src/main/resources/net/sumaris/core/db/changelog/postgresql/acost/db-changelog-1.16.0.xml">

    <property name="sqlCheck.empty.sql" value="SELECT count(*) FROM STATUS"/>
    <property name="sqlCheck.acost.sql" value="SELECT COUNT(*) FROM PROGRAM WHERE LABEL = 'ACOST'"/>
    <property name="sqlCheck.acost.expectedResult" value="1"/>

    <preConditions onFail="WARN" onFailMessage="Database instance is not a ACOST database instance ! Do not include this changelog file in the master file">
        <or>
            <!-- Test if database is empty -->
            <sqlCheck expectedResult="0">${sqlCheck.empty.sql}</sqlCheck>
            <!-- OR if expected production database -->
            <sqlCheck expectedResult="${sqlCheck.acost.expectedResult}">${sqlCheck.acost.sql}</sqlCheck>
        </or>
    </preConditions>

    <!-- Insert all FRA harbours  -->
    <changeSet author="benoit.lavenier@e-is.pro" id="1631698877905-300" runOnChange="true">
        <preConditions onFail="MARK_RAN">
            <and>
                <sqlCheck expectedResult="${sqlCheck.acost.expectedResult}">${sqlCheck.acost.sql}</sqlCheck>
                <sqlCheck expectedResult="9">SELECT COUNT(*) FROM LOCATION WHERE LOCATION_LEVEL_FK = 2 AND LABEL LIKE 'FR%'</sqlCheck>
            </and>
        </preConditions>
        <sql endDelimiter=";">
            SELECT setval('location_seq', max(id), true) from location;
        </sql>
        <sqlFile path="insert_harbours_FRA.sql" relativeToChangelogFile="true" endDelimiter=";"/>
    </changeSet>

    <!-- Insert order item for FRA harbours  -->
    <changeSet author="benoit.lavenier@e-is.pro" id="1631698877905-301" runOnChange="true">
        <preConditions onFail="MARK_RAN">
            <and>
                <sqlCheck expectedResult="${sqlCheck.acost.expectedResult}">${sqlCheck.acost.sql}</sqlCheck>
                <sqlCheck expectedResult="0">SELECT COUNT(*) FROM ORDER_ITEM WHERE ORDER_TYPE_FK=1</sqlCheck>
            </and>
        </preConditions>
        <sqlFile path="insert_harbours_FRA.sql" relativeToChangelogFile="true" endDelimiter=";"/>
    </changeSet>
</databaseChangeLog>
