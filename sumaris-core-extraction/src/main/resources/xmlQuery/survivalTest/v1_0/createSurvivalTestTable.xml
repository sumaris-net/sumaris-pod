<?xml version="1.0" encoding="UTF-8"?>
<!--
  #%L
  Dali :: Core
  %%
  Copyright (C) 2017 Ifremer
  %%
  This program is free software: you can redistribute it and/or modify
  it under the terms of the GNU Affero General Public License as published by
  the Free Software Foundation, either version 3 of the License, or
  (at your option) any later version.
  
  This program is distributed in the hope that it will be useful,
  but WITHOUT ANY WARRANTY; without even the implied warranty of
  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  GNU General Public License for more details.
  
  You should have received a copy of the GNU Affero General Public License
  along with this program.  If not, see <http://www.gnu.org/licenses/>.
  #L%
  -->

<queries name="extractionCreateSurvivalTestTable">

  <query type="create" temp="false" table="&amp;survivalTestTableName">

    <with alias="SAMPLE_WITH_MEAS">
      <subquery>
        <subselect alias="STATION_NUMBER" type="number">S.STATION_NUMBER</subselect>
        <subselect alias="ID" type="number">SA.ID</subselect>
        <subselect alias="SAMPLE_DATE" type="date">SA.SAMPLE_DATE</subselect>
        <subselect alias="REFERENCE_TAXON_FK" type="text">SA.REFERENCE_TAXON_FK</subselect>
        <subselect alias="PMFM_LABEL" type="text">PMFM.LABEL</subselect>
        <subselect alias="ALPHA_VALUE" type="text">COALESCE(SQV.LABEL, SM.ALPHANUMERICAL_VALUE)</subselect>
        <subselect alias="NUM_VALUE" type="number">SM.NUMERICAL_VALUE</subselect>

        <from alias="S">&amp;stationTableName</from>
        <from join="true">INNER JOIN SAMPLE SA ON SA.OPERATION_FK = S.STATION_NUMBER AND SA.LABEL LIKE 'SURVIVAL_TEST#%'</from>
        <from join="true">INNER JOIN SAMPLE_MEASUREMENT  SM ON SM.SAMPLE_FK = SA.ID</from>
        <from join="true">LEFT OUTER JOIN PMFM ON PMFM.ID = SM.PMFM_FK</from>
        <from join="true">LEFT OUTER JOIN QUALITATIVE_VALUE SQV ON SQV.ID=SM.QUALITATIVE_VALUE_FK</from>

        <union>
          <subquery>
            <subselect alias="STATION_NUMBER" type="number">S.STATION_NUMBER</subselect>
            <subselect alias="ID" type="number">PARENT_SA.ID</subselect>
            <subselect alias="SAMPLE_DATE" type="date">PARENT_SA.SAMPLE_DATE</subselect>
            <subselect alias="REFERENCE_TAXON_FK" type="text">PARENT_SA.REFERENCE_TAXON_FK</subselect>
            <subselect alias="PMFM_LABEL" type="text">PMFM.LABEL</subselect>
            <subselect alias="ALPHA_VALUE" type="text">COALESCE(SQV.LABEL, SM.ALPHANUMERICAL_VALUE)</subselect>
            <subselect alias="NUM_VALUE" type="number">SM.NUMERICAL_VALUE</subselect>

            <from alias="S">&amp;stationTableName</from>
            <from join="true">INNER JOIN SAMPLE PARENT_SA ON PARENT_SA.OPERATION_FK = S.STATION_NUMBER AND PARENT_SA.LABEL LIKE 'SURVIVAL_TEST#%'</from>
            <from join="true">INNER JOIN SAMPLE SA ON SA.PARENT_SAMPLE_FK = PARENT_SA.ID AND SA.LABEL LIKE 'INDIVIDUAL_MONITORING#%'</from>
            <from join="true">INNER JOIN SAMPLE_MEASUREMENT  SM ON SM.SAMPLE_FK = SA.ID</from>
            <from join="true">LEFT OUTER JOIN PMFM ON PMFM.ID = SM.PMFM_FK</from>
            <from join="true">LEFT OUTER JOIN QUALITATIVE_VALUE SQV ON SQV.ID=SM.QUALITATIVE_VALUE_FK</from>
          </subquery>
        </union>
      </subquery>
    </with>
    <!-- PK -->
    <select alias="RECORD_TYPE" type="text">'ST'</select>
    <select alias="SAMPLING_TYPE" type="text">S.SAMPLING_TYPE</select>
    <select alias="LANDING_COUNTRY" type="text">S.LANDING_COUNTRY</select>
    <select alias="VESSEL_FLAG_COUNTRY" type="text">S.VESSEL_FLAG_COUNTRY</select>
    <select alias="YEAR" type="number">S.YEAR</select>
    <select alias="PROJECT" type="text">S.PROJECT</select>
    <select alias="TRIP_CODE" type="number">S.TRIP_CODE</select>
    <select alias="STATION_NUMBER" type="number">S.STATION_NUMBER</select>
    <select alias="INDIVIDUAL_ID" type="hidden">T.ID</select> <!-- hidden column -->

    <!-- SURVIVAL TEST -->
    <select alias="SPECIES_CODE" type="number">TN.LABEL</select>
    <select alias="SPECIES_NAME" type="number">TN.NAME</select>
    <select alias="SCORING_DATE" type="number">T.SAMPLE_DATE</select>
    <select alias="PICKING_TIME" type="text">MAX(DECODE(T.PMFM_LABEL, 'PICKING_TIME', T.ALPHA_VALUE))</select>
    <select alias="VITALITY_SCORE" type="text">MAX(DECODE(T.PMFM_LABEL, 'VITALITY_SCORE', T.ALPHA_VALUE))</select>
    <select alias="REFLEX_TAIL_GRAB" type="text">MAX(DECODE(T.PMFM_LABEL, 'REFLEX_TAIL_GRAB', T.ALPHA_VALUE))</select>
    <select alias="REFLEX_STARTLE_TOUCH" type="text">MAX(DECODE(T.PMFM_LABEL, 'REFLEX_STARTLE_TOUCH', T.ALPHA_VALUE))</select>
    <select alias="REFLEX_SPIRACLES" type="text">MAX(DECODE(T.PMFM_LABEL, 'REFLEX_SPIRACLES', T.ALPHA_VALUE))</select>
    <select alias="REFLEX_BODY_FLEX" type="text">MAX(DECODE(T.PMFM_LABEL, 'REFLEX_BODY_FLEX', T.ALPHA_VALUE))</select>
    <select alias="INJURIES_OPEN_WOUNDS" type="text">MAX(DECODE(T.PMFM_LABEL, 'INJURIES_OPEN_WOUNDS', T.ALPHA_VALUE))</select>
    <select alias="INJURIES_HEAD" type="text">MAX(DECODE(T.PMFM_LABEL, 'INJURIES_HEAD', T.ALPHA_VALUE))</select>
    <select alias="INJURIES_BODY" type="text">MAX(DECODE(T.PMFM_LABEL, 'INJURIES_BODY', T.ALPHA_VALUE))</select>
    <select alias="INJURIES_TAIL" type="text">MAX(DECODE(T.PMFM_LABEL, 'INJURIES_TAIL', T.ALPHA_VALUE))</select>
    <select alias="INJURIES_FIN_DAMAGE" type="text">MAX(DECODE(T.PMFM_LABEL, 'INJURIES_FIN_DAMAGE', T.ALPHA_VALUE))</select>
    <select alias="SEX" type="text">MAX(DECODE(T.PMFM_LABEL, 'SEX', T.ALPHA_VALUE))</select>
    <select alias="LENGTH_TOTAL_CM" type="text">MAX(DECODE(T.PMFM_LABEL, 'LENGTH_TOTAL_CM', T.NUM_VALUE))</select>
    <select alias="TAG_ID" type="text">MAX(DECODE(T.PMFM_LABEL, 'TAG_ID', T.ALPHA_VALUE))</select>
    <select alias="MONITORING_BOX_ID" type="text">MAX(DECODE(T.PMFM_LABEL, 'MONITORING_BOX_ID', T.ALPHA_VALUE))</select>
    <!-- INDIVIDUAL MONITORING -->
    <select alias="IS_DEAD" type="text">MAX(DECODE(T.PMFM_LABEL, 'IS_DEAD', DECODE(T.NUM_VALUE, 1, 'Y', 0, 'N')))</select>
    <select alias="DEATH_TIME" type="text">MAX(DECODE(T.PMFM_LABEL, 'DEATH_TIME', TIMESTAMP(REPLACE(REPLACE(T.ALPHA_VALUE, 'T', ' '), 'Z', ''))))</select>
    <select alias="VERTEBRAL_COLUMN_ANALYSIS" type="text">MAX(DECODE(T.PMFM_LABEL, 'VERTEBRAL_COLUMN_ANALYSIS', DECODE(T.NUM_VALUE, 1, 'Y', 0, 'N')))</select>
    <select alias="MEASURE_TIME" type="text">MAX(DECODE(T.PMFM_LABEL, 'MEASURE_TIME', TIMESTAMP(REPLACE(REPLACE(T.ALPHA_VALUE, 'T', ' '), 'Z', ''))))</select>
    <select alias="DO_PCT" type="text">MAX(DECODE(T.PMFM_LABEL, 'DO_PCT', T.NUM_VALUE))</select>
    <select alias="SAL_PSU" type="text">MAX(DECODE(T.PMFM_LABEL, 'SAL_PSU', T.NUM_VALUE))</select>
    <select alias="WATER_TEMP_C" type="text">MAX(DECODE(T.PMFM_LABEL, 'WATER_TEMP_C', T.NUM_VALUE))</select>
    <select alias="AIR_TEMP_C" type="text">MAX(DECODE(T.PMFM_LABEL, 'AIR_TEMP_C', T.NUM_VALUE))</select>
    <select alias="CLOUD_COVER_PCT" type="text">MAX(DECODE(T.PMFM_LABEL, 'CLOUD_COVER_PCT', T.NUM_VALUE))</select>
    <select alias="COMMENTS" type="text">MAX(DECODE(T.PMFM_LABEL, 'CLOUD_COVER_PCT', T.NUM_VALUE))</select>

    <from alias="S">&amp;stationTableName</from>
    <from join="true">INNER JOIN SAMPLE_WITH_MEAS T ON T.STATION_NUMBER = S.STATION_NUMBER</from>
    <from join="true">LEFT OUTER JOIN TAXON_NAME TN ON TN.REFERENCE_TAXON_FK = T.REFERENCE_TAXON_FK AND TN.IS_REFERENT= 1</from>

    <groupby>
      RECORD_TYPE, SAMPLING_TYPE, LANDING_COUNTRY, VESSEL_FLAG_COUNTRY, YEAR, PROJECT, TRIP_CODE, STATION_NUMBER,
      INDIVIDUAL_ID, SPECIES_CODE, SPECIES_NAME, SCORING_DATE
    </groupby>
  </query>

</queries>