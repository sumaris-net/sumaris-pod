image: jlrigau/maven-git

stages:
    - build
    - test
    - docs
    - release

.build:
    stage: build
    tags:
        - sih_public_runner
    script:
        - echo "Test dev build in progress"
        - mvn -s ./ci_settings.xml -q clean install -DskipTests
    environment:
        name: test

build_auto:
    extends: .build
    only:
        - develop
        - feature/imagine
    except:
        - schedules

schedule_build:
    extends: .build
    only:
        - schedules

build_registry:
    extends: .build
    after_script:
        - RELEASE_VERSION=$(mvn org.apache.maven.plugins:maven-help-plugin:3.2.0:evaluate -Dexpression=project.version -q -DforceStdout)
        - echo "Deploy $RELEASE_VERSION in progress"
        - mvn -s ./ci_settings.xml deploy:deploy-file -DgroupId=fr.ifremer -DartifactId=imagine-pod -Dversion=$RELEASE_VERSION -Dfile=sumaris-server/target/sumaris-server-$RELEASE_VERSION.war -DrepositoryId=job-maven -Durl=https://gitlab.ifremer.fr/api/v4/projects/1272/packages/maven
    only:
        - develop
        - feature/imagine
    artifacts:
        paths:
            - sumaris-server/target/*.war
    when: manual

sonarqube:
    stage: test
    tags:
        - sih_public_runner
    variables:
        SONAR_TOKEN: "e6f816eee72d3d5c03319ec74b468157b9164d12"
        SONAR_HOST_URL: "http://visi-common-sonar.ifremer.fr:9000"
    image:
        name: sonarsource/sonar-scanner-cli:latest
        entrypoint: [""]
    script:
        - echo "Sonarqube analysis in progress"
        - sonar-scanner
            -Dsonar.projectKey=imagine-pod
            -Dsonar.host.url=$SONAR_HOST_URL
            -Dsonar.login=$SONAR_TOKEN
            -Dsonar.sourceEncoding=UTF-8
            -Dsonar.java.binaries=.
            -Dsonar.java.libraries=.
    only:
        - develop
        - feature/imagine
    when: manual


pages:
    stage: docs
    tags:
        - sih_public_runner
    image: python:3.7-alpine
    before_script:
        - git submodule foreach git fetch origin
        - git submodule foreach git pull
    script:
        - Echo "Generate SVG images"
        - git submodule foreach ./generate.sh
        - mvn -s ./ci_settings.xml site -q -Prun,hsqldb -DperformRelease
    after_script:
        - mv target/site public
    artifacts:
        paths:
            - public
    only:
        - develop
        - feature/imagine
    when: manual


release:
    stage: release
    tags:
        - sih_public_runner
    before_script:
        - git checkout -B "$CI_BUILD_REF_NAME"
        - git config --global user.email "${GITLAB_USER_EMAIL}"
        - git config --global user.name "${GITLAB_USER_NAME}"
        - echo "RELEASE_VERSION=${RELEASE_VERSION}" >> variables.env
    script:
        - echo "Preparing release"
        - mvn -s ./ci_settings.xml -B gitflow:release-start --batch-mode -DreleaseVersion="$RELEASE_VERSION"
        - echo "Performing release"
        - mvn -s ./ci_settings.xml clean deploy --batch-mode -DperformRelease -DskipTests -Drelease.server=job-maven -Phsqldb
        - echo "Creating test DB"
        - mvn -pl sumaris-core -Prun,hsqldb -DskipTests --batch-mode
        - cd sumaris-core/target && zip -q -r "sumaris-db-$RELEASE_VERSION.zip" db && cd ../..
        - echo "Pushing changes to upstream"
        - git commit -a -m "Release $RELEASE_VERSION"
        - git status
        - mvn gitflow:release-finish
    artifacts:
        paths:
            - sumaris-core/target/*.zip
            - sumaris-server/target/*.war
            - sumaris-server/target/*.zip
        reports:
            dotenv: variables.env
    only:
        - develop
    allow_failure: false
    when: manual

gitlab-release:
    stage: release
    tags: [sih_public_runner]
    image: registry.gitlab.com/gitlab-org/release-cli:latest
    script:
        - echo "running release for ${CI_COMMIT_TAG}"
    release:
        name: "Release sumaris-pod-$TAG"
        description: "Created using the release-cli $EXTRA_DESCRIPTION"
        tag_name: "${CI_COMMIT_TAG}"
        ref: "${CI_COMMIT_TAG}"
    only:
        - tags

