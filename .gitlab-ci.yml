image: jlrigau/maven-git

stages:
    - build
    - test
    - docs
    - prepare
    - release
    - deploy

.build:
    stage: build
    tags:
        - sih_public_runner
    script:
        - echo "Test dev build in progress"
        - mvn -s ./ci_settings.xml -q clean install -DskipTests
    environment:
        name: test

build_auto:
    extends: .build
    only:
        - develop
        - feature/imagine
    except:
        - schedules

schedule_build:
    extends: .build
    only:
        - schedules

build_registry:
    extends: .build
    after_script:
        - echo "Deploy Snapshot in progress"
        - SNAPSHOT_VERSION=$(mvn org.apache.maven.plugins:maven-help-plugin:3.2.0:evaluate -Dexpression=project.version -q -DforceStdout)
        - echo $SNAPSHOT_VERSION
        - mvn -s ./ci_settings.xml deploy:deploy-file -DgroupId=fr.ifremer -DartifactId=imagine-pod -Dversion=$SNAPSHOT_VERSION -Dfile=sumaris-server/target/sumaris-server-$SNAPSHOT_VERSION.war -DrepositoryId=job-maven -Durl=https://gitlab.ifremer.fr/api/v4/projects/1272/packages/maven
    only:
        - develop
        - feature/imagine
    artifacts:
        paths:
            - sumaris-server/target/*.war
    when: manual

sonarqube:
    stage: test
    tags:
        - sih_public_runner
    variables:
        SONAR_TOKEN: "e6f816eee72d3d5c03319ec74b468157b9164d12"
        SONAR_HOST_URL: "http://visi-common-sonar.ifremer.fr:9000"
    image:
        name: sonarsource/sonar-scanner-cli:latest
        entrypoint: [""]
    script:
        - echo "Sonarqube analysis in progress"
        - sonar-scanner
            -Dsonar.projectKey=imagine-pod
            -Dsonar.host.url=$SONAR_HOST_URL
            -Dsonar.login=$SONAR_TOKEN
            -Dsonar.sourceEncoding=UTF-8
            -Dsonar.java.binaries=.
            -Dsonar.java.libraries=.
    only:
        - develop
        - feature/imagine
    when: manual


pages:
    stage: docs
    tags:
        - sih_public_runner
    image: python:3.7-alpine
    script:
        - mvn -s ./ci_settings.xml -q site
    after_script:
        - mv target/site public
    artifacts:
        paths:
            - public
    only:
        - develop
        - feature/imagine
    when: manual


package:
    stage: prepare
    tags:
        - sih_public_runner
    before_script:
        - git checkout -B "$CI_BUILD_REF_NAME"
        - git config --global user.email "lbruvryl@ifremer.fr"
        - git config --global user.name "Leo BRUVRY-LAGADEC"
        - echo "TAG=$RELEASE_VERSION" >> variables.env
    script:
        - echo "Release in progress"
        - mvn release:clean -Dslf4jJclScope=provided
        - mvn -s ./ci_settings.xml release:prepare --batch-mode -Dtag=sumaris-pod-$RELEASE_VERSION -DreleaseVersion=$RELEASE_VERSION -DdevelopmentVersion=$NEW_DEV_VERSION -DscmCommentPrefix="[ci skip] to "
        - mvn -s ./ci_settings.xml release:perform -Dslf4jJclScope=provided -X -DscmCommentPrefix="[ci skip] to "
    artifacts:
        paths:
            - web-services/target/*.war
        reports:
            dotenv: variables.env
    only:
        - develop
        - feature/imagine
    allow_failure: false
    when: manual

release:
    stage: release
    tags:
        - sih_public_runner
    image: registry.gitlab.com/gitlab-org/release-cli:latest
    needs:
        - job: package
          artifacts: true
    script:
        - echo "running release for sumaris-pod-$TAG"
    release:
        name: "Release sumaris-pod-$TAG"
        description: "Created using the release-cli $EXTRA_DESCRIPTION"
        tag_name: "sumaris-pod-$TAG"
        ref: "$CI_COMMIT_SHA"
    only:
        - develop
        - feature/imagine
    when: manual

deploy:
    stage: deploy
    tags:
        - sih_public_runner
    script:
        - echo "Deploy in progress"
        - mvn -s ./ci_settings.xml deploy:deploy-file -DgroupId=fr.ifremer -DartifactId=sumaris-pod -Dversion=$TAG -Dfile=web-services/target/ROOT.war -DrepositoryId=internal-maven -Durl=https://gitlab.ifremer.fr/api/v4/projects/1226/packages/maven
    only:
        - develop
        - feature/imagine
    when: manual
