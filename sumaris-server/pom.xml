<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <parent>
    <groupId>net.sumaris</groupId>
    <artifactId>sumaris-pod</artifactId>
    <version>2.8.14-SNAPSHOT</version>
  </parent>

  <artifactId>sumaris-server</artifactId>
  <packaging>war</packaging>
  <name>SUMARiS:: Server</name>
  <description>SUMARiS server</description>

  <properties>
    <!-- i18n configuration -->
    <i18n.bundleOutputName>sumaris-server-i18n</i18n.bundleOutputName>
    <i18n.bundleCsvFile>${i18n.bundleOutputName}.csv</i18n.bundleCsvFile>
    <config.i18nBundleName>${i18n.bundleOutputName}</config.i18nBundleName>

    <!-- bundle configuration -->
    <bundlePrefix>sumarie-server-${project.version}</bundlePrefix>
    <bundle.jvmArgs>-server -Xms512m -Xmx1g -XX:+UseConcMarkSweepGC -XX:+CMSParallelRemarkEnabled -XX:+UseCMSInitiatingOccupancyOnly -XX:CMSInitiatingOccupancyFraction=50
      -XX:+ScavengeBeforeFullGC -XX:+CMSScavengeBeforeRemark
    </bundle.jvmArgs>

    <!-- Unit test -->
    <jetty.port>8080</jetty.port>
    <jetty.reload>manual</jetty.reload>
    <synchro-server.config>${project.basedir}/src/test/resources/sumaris-server-test.properties</synchro-server.config>
    <sumaris.log.file>${project.build.directory}/${bundlePrefix}.log</sumaris.log.file>

    <!-- Default implementation -->
    <spring.sql.init.platform>hsqldb</spring.sql.init.platform>
    <jdbc.url>jdbc:hsqldb:file:data/db/sumaris</jdbc.url>
    <server.address>localhost</server.address>
    <server.port>8080</server.port>
    <server.url>http://${server.address}:${server.port}</server.url>
    <server.account.register.confirm.url>${server.url}/api/confirmEmail/?email={email}&amp;code={code}</server.account.register.confirm.url>
    <admin.email>admin@locahost</admin.email>

    <maven.jar.main.class>net.sumaris.server.Application</maven.jar.main.class>

    <kotlin.version>1.3.70</kotlin.version>
  </properties>

  <dependencies>

    <!-- Project dependencies -->
    <dependency>
      <groupId>net.sumaris</groupId>
      <artifactId>sumaris-core</artifactId>
      <version>${project.version}</version>
    </dependency>
    <dependency>
      <groupId>net.sumaris</groupId>
      <artifactId>sumaris-extraction</artifactId>
      <version>${project.version}</version>
    </dependency>
    <dependency>
      <groupId>net.sumaris</groupId>
      <artifactId>sumaris-importation</artifactId>
      <version>${project.version}</version>
    </dependency>
    <dependency>
      <groupId>net.sumaris</groupId>
      <artifactId>sumaris-rdf</artifactId>
      <version>${project.version}</version>
    </dependency>

    <!-- API dependencies -->
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-jdbc</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-data-jpa</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-web</artifactId>
    </dependency>

    <!-- TODO change packaging to 'war', and change tomcat to 'provided' (see below)
         See https://dzone.com/articles/build-a-spring-boot-app-and-deploy-into-tomcat -->
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-tomcat</artifactId>
      <version>${spring-boot.version}</version>
      <scope>provided</scope>
    </dependency>

    <!-- Spring boot -->
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-websocket</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-web</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-actuator</artifactId>
    </dependency>
    <dependency>
      <groupId>io.micrometer</groupId>
      <artifactId>micrometer-registry-prometheus</artifactId>
    </dependency>

    <!-- Security -->
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-security</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework.security</groupId>
      <artifactId>spring-security-ldap</artifactId>
    </dependency>

    <!-- Email -->
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-mail</artifactId>
    </dependency>
    <dependency>
      <groupId>it.ozimov</groupId>
      <artifactId>spring-boot-email-core</artifactId>
    </dependency>

    <!-- ActiveMQ -->
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-activemq</artifactId>
    </dependency>
    <dependency>
      <groupId>org.apache.activemq</groupId>
      <artifactId>activemq-kahadb-store</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-jms</artifactId>
    </dependency>

    <!-- GraphQL -->
    <dependency>
      <groupId>com.graphql-java</groupId>
      <artifactId>graphql-java</artifactId>
    </dependency>
    <dependency>
      <groupId>com.graphql-java-kickstart</groupId>
      <artifactId>graphql-java-tools</artifactId>
    </dependency>
    <dependency>
      <groupId>com.graphql-java-kickstart</groupId>
      <artifactId>graphiql-spring-boot-starter</artifactId>
    </dependency>
    <dependency>
      <groupId>com.graphql-java-kickstart</groupId>
      <artifactId>graphql-java-servlet</artifactId>
    </dependency>
    <dependency>
      <groupId>io.leangen.graphql</groupId>
      <artifactId>spqr</artifactId>
    </dependency>
    <dependency>
      <groupId>io.projectreactor</groupId>
      <artifactId>reactor-core</artifactId>
    </dependency>
    <dependency>
      <groupId>de.grundid.opendatalab</groupId>
      <artifactId>geojson-jackson</artifactId>
    </dependency>
<!--    <dependency>-->
<!--      <groupId>org.glassfish.jaxb</groupId>-->
<!--      <artifactId>jaxb-runtime</artifactId>-->
<!--    </dependency>-->
    <dependency>
      <groupId>ch.qos.logback</groupId>
      <artifactId>logback-classic</artifactId>
    </dependency>
    <dependency>
      <groupId>ch.qos.logback</groupId>
      <artifactId>logback-core</artifactId>
      <version>${logback.version}</version>
    </dependency>

    <!-- Database drivers -->
    <dependency>
      <groupId>org.hsqldb</groupId>
      <artifactId>hsqldb</artifactId>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>com.oracle</groupId>
      <artifactId>ojdbc8</artifactId>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.postgresql</groupId>
      <artifactId>postgresql</artifactId>
      <scope>provided</scope>
    </dependency>

    <!-- Image resize
    <dependency>
      <groupId>net.coobird</groupId>
      <artifactId>thumbnailator</artifactId>
      <version>${thumbnailator.version}</version>
    </dependency>-->

    <!-- Provided -->
    <dependency>
      <groupId>javax.servlet</groupId>
      <artifactId>javax.servlet-api</artifactId>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.dom4j</groupId>
      <artifactId>dom4j</artifactId>
      <scope>provided</scope>
    </dependency>

    <!-- Compile -->
    <dependency>
      <groupId>org.projectlombok</groupId>
      <artifactId>lombok</artifactId>
    </dependency>
    <dependency>
      <groupId>org.nuiton.i18n</groupId>
      <artifactId>nuiton-i18n</artifactId>
    </dependency>

    <!-- Unit test -->
    <dependency>
      <groupId>net.sumaris</groupId>
      <artifactId>sumaris-test-shared</artifactId>
      <version>${project.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-test</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>com.graphql-java-kickstart</groupId>
      <artifactId>graphql-spring-boot-test</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>com.unboundid</groupId>
      <artifactId>unboundid-ldapsdk</artifactId>
      <scope>test</scope>
    </dependency>

  </dependencies>

  <build>

    <!-- Turn on filtering by default for application properties -->
    <resources>
      <resource>
        <directory>src/main/filtered-resources</directory>
        <filtering>true</filtering>
        <includes>
          <include>*.config</include>
          <include>**/*.properties</include>
          <include>**/*.xml</include>
          <include>**/*.yml</include>
          <include>**/*.yaml</include>
        </includes>
      </resource>
      <resource>
        <directory>src/main/resources</directory>
        <filtering>false</filtering>
        <includes>
          <include>**/*.*</include>
        </includes>
      </resource>
      <resource>
        <directory>target/generated-sources/resources</directory>
        <filtering>false</filtering>
        <includes>
          <include>**/*.*</include>
        </includes>
      </resource>
    </resources>

    <plugins>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <version>${compilerPluginVersion}</version>
        <configuration>
          <source>${javaVersion}</source>
          <target>${javaVersion}</target>
          <compilerArgument>-parameters</compilerArgument>
          <testCompilerArgument>-parameters</testCompilerArgument>
        </configuration>
      </plugin>

      <plugin>
        <groupId>org.nuiton.i18n</groupId>
        <artifactId>i18n-maven-plugin</artifactId>

        <executions>
          <execution>
            <id>scan-sources</id>
            <configuration>
              <entries>
                <entry>
                  <specificGoal>parserValidation</specificGoal>
                  <basedir>${maven.src.dir}/main/java/</basedir>
                  <includes>
                    <param>**/**-validation.xml</param>
                  </includes>
                </entry>
              </entries>
            </configuration>
            <goals>
              <goal>parserJava</goal>
              <goal>parserValidation</goal>
              <goal>gen</goal>
            </goals>
          </execution>
          <execution>
            <id>make-bundle</id>
            <goals>
              <goal>bundle</goal>
              <goal>generate-csv-bundle</goal>
            </goals>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <artifactId>maven-antrun-plugin</artifactId>
      </plugin>

      <plugin>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-maven-plugin</artifactId>
        <configuration>
          <mainClass>${maven.jar.main.class}</mainClass>
        </configuration>
        <executions>
          <execution>
            <id>generate-build-info</id>
            <goals>
              <goal>build-info</goal>
            </goals>
          </execution>

          <execution>
            <id>package-executable-war</id>
            <goals>
              <goal>repackage</goal>
            </goals>
          </execution>

        </executions>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-resources-plugin</artifactId>
        <configuration>
          <delimiters>
            <delimiter>@</delimiter>
          </delimiters>
          <useDefaultDelimiters>false</useDefaultDelimiters>
          <propertiesEncoding>UTF-8</propertiesEncoding>
        </configuration>
      </plugin>

    </plugins>
  </build>

  <profiles>
    <profile>
      <id>hsqldb</id>
      <activation>
        <activeByDefault>true</activeByDefault>
        <property>
          <name>spring.sql.init.platform</name>
          <value>hsqldb</value>
        </property>
      </activation>

      <properties>
        <jdbc.url>jdbc:hsqldb:hsql://localhost/sumaris</jdbc.url>
      </properties>

    </profile>

    <profile>
      <id>bundles</id>
      <activation>
        <property>
          <name>performRelease</name>
          <value>true</value>
        </property>
      </activation>

      <build>
        <defaultGoal>package</defaultGoal>
        <plugins>

          <plugin>
            <artifactId>maven-assembly-plugin</artifactId>
            <executions>
              <execution>
                <id>assembly-zip</id>
                <phase>package</phase>
                <goals>
                  <goal>single</goal>
                </goals>
                <configuration>
                  <attach>true</attach>
                  <descriptors>
                    <descriptor>
                      src/main/assembly/standalone.xml
                    </descriptor>
                  </descriptors>
                </configuration>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>

    <!-- use this profile to run the main class -->
    <profile>
      <id>run</id>
      <build>
        <defaultGoal>compile</defaultGoal>
        <plugins>
          <plugin>
            <groupId>org.codehaus.mojo</groupId>
            <artifactId>exec-maven-plugin</artifactId>
            <version>${execPluginVersion}</version>
            <configuration>
              <!-- Disable exec plugin (will use spring-boot:run)  -->
              <skip>true</skip>
            </configuration>
          </plugin>

          <plugin>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-maven-plugin</artifactId>
            <version>${spring-boot-plugin.version}</version>
            <executions>
              <execution>
                <id>run</id>
                <goals>
                  <goal>run</goal>
                </goals>
                <phase>compile</phase>
                <configuration>
                  <mainClass>${exec.mainClass}</mainClass>
                  <jvmArguments>${exec.jvmArgs}</jvmArguments>
                  <arguments>${exec.args}</arguments>
                </configuration>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>

      <properties>
        <exec.mainClass>${maven.jar.main.class}</exec.mainClass>
        <exec.args></exec.args>
        <exec.jvmArgs>-Duser.timezone=UTC -Dspring.main.banner-mode=off</exec.jvmArgs>
      </properties>
    </profile>
  </profiles>

</project>
